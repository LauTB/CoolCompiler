from abc import ABC
from pyjapt.parsing import ShiftReduceParser
from grammar import G


class CoolParser(ShiftReduceParser, ABC):
    def __init__(self, verbose=False):
        self.G = G
        self.verbose = verbose
        self.action = self.__action_table()
        self.goto = self.__goto_table()

    @staticmethod
    def __action_table():
        return {
            (0, G["class"]): ("SHIFT", 1),
            (1, G["type"]): ("SHIFT", 2),
            (2, G["inherits"]): ("SHIFT", 143),
            (2, G["{"]): ("SHIFT", 3),
            (3, G["id"]): ("SHIFT", 4),
            (3, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (4, G[":"]): ("SHIFT", 127),
            (4, G["("]): ("SHIFT", 5),
            (5, G["id"]): ("SHIFT", 115),
            (5, G[")"]): ("SHIFT", 6),
            (6, G[":"]): ("SHIFT", 7),
            (7, G["type"]): ("SHIFT", 8),
            (8, G["{"]): ("SHIFT", 9),
            (9, G["true"]): ("SHIFT", 25),
            (9, G["if"]): ("SHIFT", 12),
            (9, G["id"]): ("SHIFT", 31),
            (9, G["string"]): ("SHIFT", 33),
            (9, G["while"]): ("SHIFT", 13),
            (9, G["case"]): ("SHIFT", 21),
            (9, G["~"]): ("SHIFT", 27),
            (9, G["new"]): ("SHIFT", 22),
            (9, G["let"]): ("SHIFT", 14),
            (9, G["{"]): ("SHIFT", 10),
            (9, G["not"]): ("SHIFT", 30),
            (9, G["false"]): ("SHIFT", 26),
            (9, G["int"]): ("SHIFT", 34),
            (9, G["isvoid"]): ("SHIFT", 24),
            (9, G["("]): ("SHIFT", 11),
            (10, G["true"]): ("SHIFT", 25),
            (10, G["("]): ("SHIFT", 11),
            (10, G["{"]): ("SHIFT", 10),
            (10, G["id"]): ("SHIFT", 31),
            (10, G["not"]): ("SHIFT", 30),
            (10, G["string"]): ("SHIFT", 33),
            (10, G["let"]): ("SHIFT", 14),
            (10, G["isvoid"]): ("SHIFT", 24),
            (10, G["new"]): ("SHIFT", 22),
            (10, G["if"]): ("SHIFT", 12),
            (10, G["case"]): ("SHIFT", 21),
            (10, G["while"]): ("SHIFT", 13),
            (10, G["~"]): ("SHIFT", 27),
            (10, G["false"]): ("SHIFT", 26),
            (10, G["int"]): ("SHIFT", 34),
            (11, G["new"]): ("SHIFT", 22),
            (11, G["not"]): ("SHIFT", 30),
            (11, G["let"]): ("SHIFT", 14),
            (11, G["false"]): ("SHIFT", 26),
            (11, G["int"]): ("SHIFT", 34),
            (11, G["id"]): ("SHIFT", 31),
            (11, G["if"]): ("SHIFT", 12),
            (11, G["~"]): ("SHIFT", 27),
            (11, G["("]): ("SHIFT", 11),
            (11, G["true"]): ("SHIFT", 25),
            (11, G["while"]): ("SHIFT", 13),
            (11, G["case"]): ("SHIFT", 21),
            (11, G["string"]): ("SHIFT", 33),
            (11, G["{"]): ("SHIFT", 10),
            (11, G["isvoid"]): ("SHIFT", 24),
            (12, G["id"]): ("SHIFT", 31),
            (12, G["{"]): ("SHIFT", 10),
            (12, G["("]): ("SHIFT", 11),
            (12, G["not"]): ("SHIFT", 30),
            (12, G["true"]): ("SHIFT", 25),
            (12, G["false"]): ("SHIFT", 26),
            (12, G["~"]): ("SHIFT", 27),
            (12, G["let"]): ("SHIFT", 14),
            (12, G["string"]): ("SHIFT", 33),
            (12, G["if"]): ("SHIFT", 12),
            (12, G["new"]): ("SHIFT", 22),
            (12, G["while"]): ("SHIFT", 13),
            (12, G["case"]): ("SHIFT", 21),
            (12, G["isvoid"]): ("SHIFT", 24),
            (12, G["int"]): ("SHIFT", 34),
            (13, G["("]): ("SHIFT", 11),
            (13, G["{"]): ("SHIFT", 10),
            (13, G["true"]): ("SHIFT", 25),
            (13, G["not"]): ("SHIFT", 30),
            (13, G["id"]): ("SHIFT", 31),
            (13, G["string"]): ("SHIFT", 33),
            (13, G["isvoid"]): ("SHIFT", 24),
            (13, G["let"]): ("SHIFT", 14),
            (13, G["if"]): ("SHIFT", 12),
            (13, G["new"]): ("SHIFT", 22),
            (13, G["while"]): ("SHIFT", 13),
            (13, G["case"]): ("SHIFT", 21),
            (13, G["~"]): ("SHIFT", 27),
            (13, G["false"]): ("SHIFT", 26),
            (13, G["int"]): ("SHIFT", 34),
            (14, G["id"]): ("SHIFT", 15),
            (15, G[":"]): ("SHIFT", 16),
            (16, G["type"]): ("SHIFT", 17),
            (17, G["in"]): ("REDUCE", G["declaration-list -> id : type"]),
            (17, G["<-"]): ("SHIFT", 20),
            (17, G[","]): ("SHIFT", 18),
            (18, G["id"]): ("SHIFT", 15),
            (19, G["in"]): ("REDUCE", G["declaration-list -> id : type , declaration-list"]),
            (20, G["new"]): ("SHIFT", 22),
            (20, G["isvoid"]): ("SHIFT", 24),
            (20, G["{"]): ("SHIFT", 10),
            (20, G["not"]): ("SHIFT", 30),
            (20, G["int"]): ("SHIFT", 34),
            (20, G["false"]): ("SHIFT", 26),
            (20, G["let"]): ("SHIFT", 14),
            (20, G["id"]): ("SHIFT", 31),
            (20, G["~"]): ("SHIFT", 27),
            (20, G["("]): ("SHIFT", 11),
            (20, G["if"]): ("SHIFT", 12),
            (20, G["true"]): ("SHIFT", 25),
            (20, G["while"]): ("SHIFT", 13),
            (20, G["case"]): ("SHIFT", 21),
            (20, G["string"]): ("SHIFT", 33),
            (21, G["false"]): ("SHIFT", 26),
            (21, G["int"]): ("SHIFT", 34),
            (21, G["id"]): ("SHIFT", 31),
            (21, G["if"]): ("SHIFT", 12),
            (21, G["("]): ("SHIFT", 11),
            (21, G["true"]): ("SHIFT", 25),
            (21, G["case"]): ("SHIFT", 21),
            (21, G["while"]): ("SHIFT", 13),
            (21, G["string"]): ("SHIFT", 33),
            (21, G["isvoid"]): ("SHIFT", 24),
            (21, G["{"]): ("SHIFT", 10),
            (21, G["new"]): ("SHIFT", 22),
            (21, G["not"]): ("SHIFT", 30),
            (21, G["~"]): ("SHIFT", 27),
            (21, G["let"]): ("SHIFT", 14),
            (22, G["type"]): ("SHIFT", 23),
            (23, G["of"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<"]): ("REDUCE", G["atom -> new type"]),
            (23, G[")"]): ("REDUCE", G["atom -> new type"]),
            (23, G["then"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<="]): ("REDUCE", G["atom -> new type"]),
            (23, G["."]): ("REDUCE", G["atom -> new type"]),
            (23, G["else"]): ("REDUCE", G["atom -> new type"]),
            (23, G["="]): ("REDUCE", G["atom -> new type"]),
            (23, G[","]): ("REDUCE", G["atom -> new type"]),
            (23, G["fi"]): ("REDUCE", G["atom -> new type"]),
            (23, G["error"]): ("REDUCE", G["atom -> new type"]),
            (23, G[";"]): ("REDUCE", G["atom -> new type"]),
            (23, G["loop"]): ("REDUCE", G["atom -> new type"]),
            (23, G["@"]): ("REDUCE", G["atom -> new type"]),
            (23, G["pool"]): ("REDUCE", G["atom -> new type"]),
            (23, G["+"]): ("REDUCE", G["atom -> new type"]),
            (23, G["-"]): ("REDUCE", G["atom -> new type"]),
            (23, G["in"]): ("REDUCE", G["atom -> new type"]),
            (23, G["*"]): ("REDUCE", G["atom -> new type"]),
            (23, G["}"]): ("REDUCE", G["atom -> new type"]),
            (23, G["/"]): ("REDUCE", G["atom -> new type"]),
            (24, G["("]): ("SHIFT", 11),
            (24, G["string"]): ("SHIFT", 33),
            (24, G["new"]): ("SHIFT", 22),
            (24, G["true"]): ("SHIFT", 25),
            (24, G["false"]): ("SHIFT", 26),
            (24, G["int"]): ("SHIFT", 34),
            (24, G["id"]): ("SHIFT", 28),
            (24, G["~"]): ("SHIFT", 27),
            (24, G["isvoid"]): ("SHIFT", 24),
            (25, G["of"]): ("REDUCE", G["atom -> true"]),
            (25, G["<"]): ("REDUCE", G["atom -> true"]),
            (25, G[")"]): ("REDUCE", G["atom -> true"]),
            (25, G["then"]): ("REDUCE", G["atom -> true"]),
            (25, G["<="]): ("REDUCE", G["atom -> true"]),
            (25, G["."]): ("REDUCE", G["atom -> true"]),
            (25, G["else"]): ("REDUCE", G["atom -> true"]),
            (25, G["="]): ("REDUCE", G["atom -> true"]),
            (25, G[","]): ("REDUCE", G["atom -> true"]),
            (25, G["fi"]): ("REDUCE", G["atom -> true"]),
            (25, G["error"]): ("REDUCE", G["atom -> true"]),
            (25, G[";"]): ("REDUCE", G["atom -> true"]),
            (25, G["loop"]): ("REDUCE", G["atom -> true"]),
            (25, G["@"]): ("REDUCE", G["atom -> true"]),
            (25, G["pool"]): ("REDUCE", G["atom -> true"]),
            (25, G["+"]): ("REDUCE", G["atom -> true"]),
            (25, G["-"]): ("REDUCE", G["atom -> true"]),
            (25, G["in"]): ("REDUCE", G["atom -> true"]),
            (25, G["*"]): ("REDUCE", G["atom -> true"]),
            (25, G["}"]): ("REDUCE", G["atom -> true"]),
            (25, G["/"]): ("REDUCE", G["atom -> true"]),
            (26, G["of"]): ("REDUCE", G["atom -> false"]),
            (26, G["<"]): ("REDUCE", G["atom -> false"]),
            (26, G[")"]): ("REDUCE", G["atom -> false"]),
            (26, G["then"]): ("REDUCE", G["atom -> false"]),
            (26, G["<="]): ("REDUCE", G["atom -> false"]),
            (26, G["."]): ("REDUCE", G["atom -> false"]),
            (26, G["else"]): ("REDUCE", G["atom -> false"]),
            (26, G["="]): ("REDUCE", G["atom -> false"]),
            (26, G[","]): ("REDUCE", G["atom -> false"]),
            (26, G["fi"]): ("REDUCE", G["atom -> false"]),
            (26, G["error"]): ("REDUCE", G["atom -> false"]),
            (26, G[";"]): ("REDUCE", G["atom -> false"]),
            (26, G["loop"]): ("REDUCE", G["atom -> false"]),
            (26, G["@"]): ("REDUCE", G["atom -> false"]),
            (26, G["pool"]): ("REDUCE", G["atom -> false"]),
            (26, G["+"]): ("REDUCE", G["atom -> false"]),
            (26, G["-"]): ("REDUCE", G["atom -> false"]),
            (26, G["in"]): ("REDUCE", G["atom -> false"]),
            (26, G["*"]): ("REDUCE", G["atom -> false"]),
            (26, G["}"]): ("REDUCE", G["atom -> false"]),
            (26, G["/"]): ("REDUCE", G["atom -> false"]),
            (27, G["("]): ("SHIFT", 11),
            (27, G["string"]): ("SHIFT", 33),
            (27, G["new"]): ("SHIFT", 22),
            (27, G["true"]): ("SHIFT", 25),
            (27, G["false"]): ("SHIFT", 26),
            (27, G["int"]): ("SHIFT", 34),
            (27, G["id"]): ("SHIFT", 28),
            (27, G["~"]): ("SHIFT", 27),
            (27, G["isvoid"]): ("SHIFT", 24),
            (28, G["("]): ("SHIFT", 29),
            (28, G["of"]): ("REDUCE", G["atom -> id"]),
            (28, G["<"]): ("REDUCE", G["atom -> id"]),
            (28, G[")"]): ("REDUCE", G["atom -> id"]),
            (28, G["then"]): ("REDUCE", G["atom -> id"]),
            (28, G["<="]): ("REDUCE", G["atom -> id"]),
            (28, G["."]): ("REDUCE", G["atom -> id"]),
            (28, G["else"]): ("REDUCE", G["atom -> id"]),
            (28, G["="]): ("REDUCE", G["atom -> id"]),
            (28, G[","]): ("REDUCE", G["atom -> id"]),
            (28, G["fi"]): ("REDUCE", G["atom -> id"]),
            (28, G["error"]): ("REDUCE", G["atom -> id"]),
            (28, G[";"]): ("REDUCE", G["atom -> id"]),
            (28, G["loop"]): ("REDUCE", G["atom -> id"]),
            (28, G["@"]): ("REDUCE", G["atom -> id"]),
            (28, G["pool"]): ("REDUCE", G["atom -> id"]),
            (28, G["+"]): ("REDUCE", G["atom -> id"]),
            (28, G["-"]): ("REDUCE", G["atom -> id"]),
            (28, G["in"]): ("REDUCE", G["atom -> id"]),
            (28, G["*"]): ("REDUCE", G["atom -> id"]),
            (28, G["}"]): ("REDUCE", G["atom -> id"]),
            (28, G["/"]): ("REDUCE", G["atom -> id"]),
            (29, G["let"]): ("SHIFT", 14),
            (29, G["id"]): ("SHIFT", 31),
            (29, G["if"]): ("SHIFT", 12),
            (29, G["string"]): ("SHIFT", 33),
            (29, G["~"]): ("SHIFT", 27),
            (29, G["case"]): ("SHIFT", 21),
            (29, G["while"]): ("SHIFT", 13),
            (29, G["new"]): ("SHIFT", 22),
            (29, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (29, G["{"]): ("SHIFT", 10),
            (29, G["false"]): ("SHIFT", 26),
            (29, G["not"]): ("SHIFT", 30),
            (29, G["int"]): ("SHIFT", 34),
            (29, G["isvoid"]): ("SHIFT", 24),
            (29, G["("]): ("SHIFT", 11),
            (29, G["true"]): ("SHIFT", 25),
            (30, G["("]): ("SHIFT", 11),
            (30, G["true"]): ("SHIFT", 25),
            (30, G["let"]): ("SHIFT", 14),
            (30, G["id"]): ("SHIFT", 31),
            (30, G["if"]): ("SHIFT", 12),
            (30, G["string"]): ("SHIFT", 33),
            (30, G["while"]): ("SHIFT", 13),
            (30, G["case"]): ("SHIFT", 21),
            (30, G["isvoid"]): ("SHIFT", 24),
            (30, G["new"]): ("SHIFT", 22),
            (30, G["{"]): ("SHIFT", 10),
            (30, G["false"]): ("SHIFT", 26),
            (30, G["int"]): ("SHIFT", 34),
            (30, G["not"]): ("SHIFT", 30),
            (30, G["~"]): ("SHIFT", 27),
            (31, G["("]): ("SHIFT", 29),
            (31, G["<-"]): ("SHIFT", 32),
            (31, G["of"]): ("REDUCE", G["atom -> id"]),
            (31, G["<"]): ("REDUCE", G["atom -> id"]),
            (31, G[")"]): ("REDUCE", G["atom -> id"]),
            (31, G["then"]): ("REDUCE", G["atom -> id"]),
            (31, G["<="]): ("REDUCE", G["atom -> id"]),
            (31, G["."]): ("REDUCE", G["atom -> id"]),
            (31, G["else"]): ("REDUCE", G["atom -> id"]),
            (31, G["="]): ("REDUCE", G["atom -> id"]),
            (31, G[","]): ("REDUCE", G["atom -> id"]),
            (31, G["fi"]): ("REDUCE", G["atom -> id"]),
            (31, G["error"]): ("REDUCE", G["atom -> id"]),
            (31, G[";"]): ("REDUCE", G["atom -> id"]),
            (31, G["loop"]): ("REDUCE", G["atom -> id"]),
            (31, G["@"]): ("REDUCE", G["atom -> id"]),
            (31, G["pool"]): ("REDUCE", G["atom -> id"]),
            (31, G["+"]): ("REDUCE", G["atom -> id"]),
            (31, G["-"]): ("REDUCE", G["atom -> id"]),
            (31, G["in"]): ("REDUCE", G["atom -> id"]),
            (31, G["*"]): ("REDUCE", G["atom -> id"]),
            (31, G["}"]): ("REDUCE", G["atom -> id"]),
            (31, G["/"]): ("REDUCE", G["atom -> id"]),
            (32, G["("]): ("SHIFT", 11),
            (32, G["true"]): ("SHIFT", 25),
            (32, G["let"]): ("SHIFT", 14),
            (32, G["id"]): ("SHIFT", 31),
            (32, G["if"]): ("SHIFT", 12),
            (32, G["string"]): ("SHIFT", 33),
            (32, G["while"]): ("SHIFT", 13),
            (32, G["case"]): ("SHIFT", 21),
            (32, G["isvoid"]): ("SHIFT", 24),
            (32, G["new"]): ("SHIFT", 22),
            (32, G["{"]): ("SHIFT", 10),
            (32, G["false"]): ("SHIFT", 26),
            (32, G["int"]): ("SHIFT", 34),
            (32, G["not"]): ("SHIFT", 30),
            (32, G["~"]): ("SHIFT", 27),
            (33, G["of"]): ("REDUCE", G["atom -> string"]),
            (33, G["<"]): ("REDUCE", G["atom -> string"]),
            (33, G[")"]): ("REDUCE", G["atom -> string"]),
            (33, G["then"]): ("REDUCE", G["atom -> string"]),
            (33, G["<="]): ("REDUCE", G["atom -> string"]),
            (33, G["."]): ("REDUCE", G["atom -> string"]),
            (33, G["else"]): ("REDUCE", G["atom -> string"]),
            (33, G["="]): ("REDUCE", G["atom -> string"]),
            (33, G[","]): ("REDUCE", G["atom -> string"]),
            (33, G["fi"]): ("REDUCE", G["atom -> string"]),
            (33, G["error"]): ("REDUCE", G["atom -> string"]),
            (33, G[";"]): ("REDUCE", G["atom -> string"]),
            (33, G["loop"]): ("REDUCE", G["atom -> string"]),
            (33, G["@"]): ("REDUCE", G["atom -> string"]),
            (33, G["pool"]): ("REDUCE", G["atom -> string"]),
            (33, G["+"]): ("REDUCE", G["atom -> string"]),
            (33, G["-"]): ("REDUCE", G["atom -> string"]),
            (33, G["in"]): ("REDUCE", G["atom -> string"]),
            (33, G["*"]): ("REDUCE", G["atom -> string"]),
            (33, G["}"]): ("REDUCE", G["atom -> string"]),
            (33, G["/"]): ("REDUCE", G["atom -> string"]),
            (34, G["of"]): ("REDUCE", G["atom -> int"]),
            (34, G["<"]): ("REDUCE", G["atom -> int"]),
            (34, G[")"]): ("REDUCE", G["atom -> int"]),
            (34, G["then"]): ("REDUCE", G["atom -> int"]),
            (34, G["<="]): ("REDUCE", G["atom -> int"]),
            (34, G["."]): ("REDUCE", G["atom -> int"]),
            (34, G["else"]): ("REDUCE", G["atom -> int"]),
            (34, G["="]): ("REDUCE", G["atom -> int"]),
            (34, G[","]): ("REDUCE", G["atom -> int"]),
            (34, G["fi"]): ("REDUCE", G["atom -> int"]),
            (34, G["error"]): ("REDUCE", G["atom -> int"]),
            (34, G[";"]): ("REDUCE", G["atom -> int"]),
            (34, G["loop"]): ("REDUCE", G["atom -> int"]),
            (34, G["@"]): ("REDUCE", G["atom -> int"]),
            (34, G["pool"]): ("REDUCE", G["atom -> int"]),
            (34, G["+"]): ("REDUCE", G["atom -> int"]),
            (34, G["-"]): ("REDUCE", G["atom -> int"]),
            (34, G["in"]): ("REDUCE", G["atom -> int"]),
            (34, G["*"]): ("REDUCE", G["atom -> int"]),
            (34, G["}"]): ("REDUCE", G["atom -> int"]),
            (34, G["/"]): ("REDUCE", G["atom -> int"]),
            (35, G["of"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["<"]): ("REDUCE", G["atom -> function-call"]),
            (35, G[")"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["then"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["<="]): ("REDUCE", G["atom -> function-call"]),
            (35, G["."]): ("REDUCE", G["atom -> function-call"]),
            (35, G["else"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["="]): ("REDUCE", G["atom -> function-call"]),
            (35, G[","]): ("REDUCE", G["atom -> function-call"]),
            (35, G["fi"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["error"]): ("REDUCE", G["atom -> function-call"]),
            (35, G[";"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["loop"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["@"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["pool"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["+"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["-"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["in"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["*"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["}"]): ("REDUCE", G["atom -> function-call"]),
            (35, G["/"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["pool"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G[")"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["then"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["else"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G[","]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["in"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["fi"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["error"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["}"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["of"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G[";"]): ("REDUCE", G["expr -> id <- expr"]),
            (36, G["loop"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["pool"]): ("REDUCE", G["expr -> comp"]),
            (37, G[")"]): ("REDUCE", G["expr -> comp"]),
            (37, G["then"]): ("REDUCE", G["expr -> comp"]),
            (37, G["else"]): ("REDUCE", G["expr -> comp"]),
            (37, G[","]): ("REDUCE", G["expr -> comp"]),
            (37, G["in"]): ("REDUCE", G["expr -> comp"]),
            (37, G["fi"]): ("REDUCE", G["expr -> comp"]),
            (37, G["error"]): ("REDUCE", G["expr -> comp"]),
            (37, G["}"]): ("REDUCE", G["expr -> comp"]),
            (37, G["of"]): ("REDUCE", G["expr -> comp"]),
            (37, G[";"]): ("REDUCE", G["expr -> comp"]),
            (37, G["loop"]): ("REDUCE", G["expr -> comp"]),
            (38, G["+"]): ("SHIFT", 39),
            (38, G["="]): ("SHIFT", 70),
            (38, G["<="]): ("SHIFT", 68),
            (38, G["pool"]): ("REDUCE", G["comp -> arith"]),
            (38, G[")"]): ("REDUCE", G["comp -> arith"]),
            (38, G["then"]): ("REDUCE", G["comp -> arith"]),
            (38, G["else"]): ("REDUCE", G["comp -> arith"]),
            (38, G[","]): ("REDUCE", G["comp -> arith"]),
            (38, G["in"]): ("REDUCE", G["comp -> arith"]),
            (38, G["fi"]): ("REDUCE", G["comp -> arith"]),
            (38, G["error"]): ("REDUCE", G["comp -> arith"]),
            (38, G["}"]): ("REDUCE", G["comp -> arith"]),
            (38, G["of"]): ("REDUCE", G["comp -> arith"]),
            (38, G[";"]): ("REDUCE", G["comp -> arith"]),
            (38, G["loop"]): ("REDUCE", G["comp -> arith"]),
            (38, G["-"]): ("SHIFT", 64),
            (38, G["<"]): ("SHIFT", 66),
            (39, G["("]): ("SHIFT", 11),
            (39, G["new"]): ("SHIFT", 22),
            (39, G["true"]): ("SHIFT", 25),
            (39, G["id"]): ("SHIFT", 28),
            (39, G["string"]): ("SHIFT", 33),
            (39, G["false"]): ("SHIFT", 26),
            (39, G["int"]): ("SHIFT", 34),
            (39, G["~"]): ("SHIFT", 27),
            (39, G["isvoid"]): ("SHIFT", 24),
            (40, G["<"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G[")"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["then"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["<="]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["else"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["="]): ("REDUCE", G["arith -> arith + term"]),
            (40, G[","]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["fi"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["error"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G[";"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["loop"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["pool"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["+"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["-"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["in"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["}"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["of"]): ("REDUCE", G["arith -> arith + term"]),
            (40, G["/"]): ("SHIFT", 54),
            (40, G["*"]): ("SHIFT", 41),
            (41, G["("]): ("SHIFT", 11),
            (41, G["string"]): ("SHIFT", 33),
            (41, G["new"]): ("SHIFT", 22),
            (41, G["true"]): ("SHIFT", 25),
            (41, G["false"]): ("SHIFT", 26),
            (41, G["int"]): ("SHIFT", 34),
            (41, G["id"]): ("SHIFT", 28),
            (41, G["~"]): ("SHIFT", 27),
            (41, G["isvoid"]): ("SHIFT", 24),
            (42, G["of"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["<"]): ("REDUCE", G["term -> term * factor"]),
            (42, G[")"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["then"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["<="]): ("REDUCE", G["term -> term * factor"]),
            (42, G["else"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["="]): ("REDUCE", G["term -> term * factor"]),
            (42, G[","]): ("REDUCE", G["term -> term * factor"]),
            (42, G["fi"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["error"]): ("REDUCE", G["term -> term * factor"]),
            (42, G[";"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["loop"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["pool"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["+"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["-"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["in"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["*"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["}"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["/"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["of"]): ("REDUCE", G["factor -> atom"]),
            (43, G["<"]): ("REDUCE", G["factor -> atom"]),
            (43, G[")"]): ("REDUCE", G["factor -> atom"]),
            (43, G["then"]): ("REDUCE", G["factor -> atom"]),
            (43, G["<="]): ("REDUCE", G["factor -> atom"]),
            (43, G["else"]): ("REDUCE", G["factor -> atom"]),
            (43, G["="]): ("REDUCE", G["factor -> atom"]),
            (43, G[","]): ("REDUCE", G["factor -> atom"]),
            (43, G["fi"]): ("REDUCE", G["factor -> atom"]),
            (43, G["error"]): ("REDUCE", G["factor -> atom"]),
            (43, G[";"]): ("REDUCE", G["factor -> atom"]),
            (43, G["loop"]): ("REDUCE", G["factor -> atom"]),
            (43, G["pool"]): ("REDUCE", G["factor -> atom"]),
            (43, G["+"]): ("REDUCE", G["factor -> atom"]),
            (43, G["-"]): ("REDUCE", G["factor -> atom"]),
            (43, G["in"]): ("REDUCE", G["factor -> atom"]),
            (43, G["*"]): ("REDUCE", G["factor -> atom"]),
            (43, G["}"]): ("REDUCE", G["factor -> atom"]),
            (43, G["/"]): ("REDUCE", G["factor -> atom"]),
            (43, G["@"]): ("SHIFT", 57),
            (43, G["."]): ("SHIFT", 44),
            (44, G["id"]): ("SHIFT", 45),
            (45, G["("]): ("SHIFT", 46),
            (46, G["let"]): ("SHIFT", 14),
            (46, G["id"]): ("SHIFT", 31),
            (46, G["if"]): ("SHIFT", 12),
            (46, G["string"]): ("SHIFT", 33),
            (46, G["~"]): ("SHIFT", 27),
            (46, G["case"]): ("SHIFT", 21),
            (46, G["while"]): ("SHIFT", 13),
            (46, G["new"]): ("SHIFT", 22),
            (46, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (46, G["{"]): ("SHIFT", 10),
            (46, G["false"]): ("SHIFT", 26),
            (46, G["not"]): ("SHIFT", 30),
            (46, G["int"]): ("SHIFT", 34),
            (46, G["isvoid"]): ("SHIFT", 24),
            (46, G["("]): ("SHIFT", 11),
            (46, G["true"]): ("SHIFT", 25),
            (47, G[")"]): ("SHIFT", 48),
            (48, G["of"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["<"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G[")"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["then"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["<="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["."]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["else"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G[","]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["fi"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["error"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G[";"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["loop"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["@"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["pool"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["+"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["-"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["in"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["*"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["}"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (48, G["/"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (49, G[")"]): ("REDUCE", G["expr-list -> not-empty-expr-list"]),
            (50, G[","]): ("SHIFT", 51),
            (50, G[")"]): ("REDUCE", G["not-empty-expr-list -> expr"]),
            (51, G["let"]): ("SHIFT", 14),
            (51, G["id"]): ("SHIFT", 31),
            (51, G["if"]): ("SHIFT", 12),
            (51, G["string"]): ("SHIFT", 33),
            (51, G["~"]): ("SHIFT", 27),
            (51, G["case"]): ("SHIFT", 21),
            (51, G["while"]): ("SHIFT", 13),
            (51, G["new"]): ("SHIFT", 22),
            (51, G["{"]): ("SHIFT", 10),
            (51, G["false"]): ("SHIFT", 26),
            (51, G["not"]): ("SHIFT", 30),
            (51, G["int"]): ("SHIFT", 34),
            (51, G["isvoid"]): ("SHIFT", 24),
            (51, G["("]): ("SHIFT", 11),
            (51, G["true"]): ("SHIFT", 25),
            (52, G[")"]): ("REDUCE", G["not-empty-expr-list -> expr , not-empty-expr-list"]),
            (53, G["<"]): ("REDUCE", G["arith -> term"]),
            (53, G[")"]): ("REDUCE", G["arith -> term"]),
            (53, G["then"]): ("REDUCE", G["arith -> term"]),
            (53, G["<="]): ("REDUCE", G["arith -> term"]),
            (53, G["else"]): ("REDUCE", G["arith -> term"]),
            (53, G["="]): ("REDUCE", G["arith -> term"]),
            (53, G[","]): ("REDUCE", G["arith -> term"]),
            (53, G["fi"]): ("REDUCE", G["arith -> term"]),
            (53, G["error"]): ("REDUCE", G["arith -> term"]),
            (53, G[";"]): ("REDUCE", G["arith -> term"]),
            (53, G["loop"]): ("REDUCE", G["arith -> term"]),
            (53, G["pool"]): ("REDUCE", G["arith -> term"]),
            (53, G["+"]): ("REDUCE", G["arith -> term"]),
            (53, G["-"]): ("REDUCE", G["arith -> term"]),
            (53, G["in"]): ("REDUCE", G["arith -> term"]),
            (53, G["}"]): ("REDUCE", G["arith -> term"]),
            (53, G["of"]): ("REDUCE", G["arith -> term"]),
            (53, G["/"]): ("SHIFT", 54),
            (53, G["*"]): ("SHIFT", 41),
            (54, G["("]): ("SHIFT", 11),
            (54, G["string"]): ("SHIFT", 33),
            (54, G["new"]): ("SHIFT", 22),
            (54, G["true"]): ("SHIFT", 25),
            (54, G["false"]): ("SHIFT", 26),
            (54, G["int"]): ("SHIFT", 34),
            (54, G["id"]): ("SHIFT", 28),
            (54, G["~"]): ("SHIFT", 27),
            (54, G["isvoid"]): ("SHIFT", 24),
            (55, G["of"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["<"]): ("REDUCE", G["term -> term / factor"]),
            (55, G[")"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["then"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["<="]): ("REDUCE", G["term -> term / factor"]),
            (55, G["else"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["="]): ("REDUCE", G["term -> term / factor"]),
            (55, G[","]): ("REDUCE", G["term -> term / factor"]),
            (55, G["fi"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["error"]): ("REDUCE", G["term -> term / factor"]),
            (55, G[";"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["loop"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["pool"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["+"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["-"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["in"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["*"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["}"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["/"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["of"]): ("REDUCE", G["term -> factor"]),
            (56, G["<"]): ("REDUCE", G["term -> factor"]),
            (56, G[")"]): ("REDUCE", G["term -> factor"]),
            (56, G["then"]): ("REDUCE", G["term -> factor"]),
            (56, G["<="]): ("REDUCE", G["term -> factor"]),
            (56, G["else"]): ("REDUCE", G["term -> factor"]),
            (56, G["="]): ("REDUCE", G["term -> factor"]),
            (56, G[","]): ("REDUCE", G["term -> factor"]),
            (56, G["fi"]): ("REDUCE", G["term -> factor"]),
            (56, G["error"]): ("REDUCE", G["term -> factor"]),
            (56, G[";"]): ("REDUCE", G["term -> factor"]),
            (56, G["loop"]): ("REDUCE", G["term -> factor"]),
            (56, G["pool"]): ("REDUCE", G["term -> factor"]),
            (56, G["+"]): ("REDUCE", G["term -> factor"]),
            (56, G["-"]): ("REDUCE", G["term -> factor"]),
            (56, G["in"]): ("REDUCE", G["term -> factor"]),
            (56, G["*"]): ("REDUCE", G["term -> factor"]),
            (56, G["}"]): ("REDUCE", G["term -> factor"]),
            (56, G["/"]): ("REDUCE", G["term -> factor"]),
            (57, G["type"]): ("SHIFT", 58),
            (58, G["."]): ("SHIFT", 59),
            (59, G["id"]): ("SHIFT", 60),
            (60, G["("]): ("SHIFT", 61),
            (61, G["let"]): ("SHIFT", 14),
            (61, G["id"]): ("SHIFT", 31),
            (61, G["if"]): ("SHIFT", 12),
            (61, G["string"]): ("SHIFT", 33),
            (61, G["~"]): ("SHIFT", 27),
            (61, G["case"]): ("SHIFT", 21),
            (61, G["while"]): ("SHIFT", 13),
            (61, G["new"]): ("SHIFT", 22),
            (61, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (61, G["{"]): ("SHIFT", 10),
            (61, G["false"]): ("SHIFT", 26),
            (61, G["not"]): ("SHIFT", 30),
            (61, G["int"]): ("SHIFT", 34),
            (61, G["isvoid"]): ("SHIFT", 24),
            (61, G["("]): ("SHIFT", 11),
            (61, G["true"]): ("SHIFT", 25),
            (62, G[")"]): ("SHIFT", 63),
            (63, G["of"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["<"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G[")"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["then"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["<="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["."]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["else"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G[","]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["fi"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["error"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G[";"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["loop"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["@"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["pool"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["+"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["-"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["in"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["*"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["}"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (63, G["/"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (64, G["("]): ("SHIFT", 11),
            (64, G["new"]): ("SHIFT", 22),
            (64, G["true"]): ("SHIFT", 25),
            (64, G["id"]): ("SHIFT", 28),
            (64, G["string"]): ("SHIFT", 33),
            (64, G["false"]): ("SHIFT", 26),
            (64, G["int"]): ("SHIFT", 34),
            (64, G["~"]): ("SHIFT", 27),
            (64, G["isvoid"]): ("SHIFT", 24),
            (65, G["/"]): ("SHIFT", 54),
            (65, G["<"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G[")"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["then"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["<="]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["else"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["="]): ("REDUCE", G["arith -> arith - term"]),
            (65, G[","]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["fi"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["error"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G[";"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["loop"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["pool"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["+"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["-"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["in"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["}"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["of"]): ("REDUCE", G["arith -> arith - term"]),
            (65, G["*"]): ("SHIFT", 41),
            (66, G["false"]): ("SHIFT", 26),
            (66, G["int"]): ("SHIFT", 34),
            (66, G["id"]): ("SHIFT", 28),
            (66, G["("]): ("SHIFT", 11),
            (66, G["new"]): ("SHIFT", 22),
            (66, G["true"]): ("SHIFT", 25),
            (66, G["~"]): ("SHIFT", 27),
            (66, G["isvoid"]): ("SHIFT", 24),
            (66, G["string"]): ("SHIFT", 33),
            (67, G["+"]): ("SHIFT", 39),
            (67, G["-"]): ("SHIFT", 64),
            (67, G["pool"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G[")"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["then"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["else"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G[","]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["in"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["fi"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["error"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["}"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["of"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G[";"]): ("REDUCE", G["comp -> arith < arith"]),
            (67, G["loop"]): ("REDUCE", G["comp -> arith < arith"]),
            (68, G["false"]): ("SHIFT", 26),
            (68, G["int"]): ("SHIFT", 34),
            (68, G["id"]): ("SHIFT", 28),
            (68, G["("]): ("SHIFT", 11),
            (68, G["new"]): ("SHIFT", 22),
            (68, G["true"]): ("SHIFT", 25),
            (68, G["~"]): ("SHIFT", 27),
            (68, G["isvoid"]): ("SHIFT", 24),
            (68, G["string"]): ("SHIFT", 33),
            (69, G["+"]): ("SHIFT", 39),
            (69, G["-"]): ("SHIFT", 64),
            (69, G["pool"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G[")"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["then"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["else"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G[","]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["in"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["fi"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["error"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["}"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["of"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G[";"]): ("REDUCE", G["comp -> arith <= arith"]),
            (69, G["loop"]): ("REDUCE", G["comp -> arith <= arith"]),
            (70, G["false"]): ("SHIFT", 26),
            (70, G["int"]): ("SHIFT", 34),
            (70, G["id"]): ("SHIFT", 28),
            (70, G["("]): ("SHIFT", 11),
            (70, G["new"]): ("SHIFT", 22),
            (70, G["true"]): ("SHIFT", 25),
            (70, G["~"]): ("SHIFT", 27),
            (70, G["isvoid"]): ("SHIFT", 24),
            (70, G["string"]): ("SHIFT", 33),
            (71, G["+"]): ("SHIFT", 39),
            (71, G["-"]): ("SHIFT", 64),
            (71, G["pool"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G[")"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["then"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["else"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G[","]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["in"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["fi"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["error"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["}"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["of"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G[";"]): ("REDUCE", G["comp -> arith = arith"]),
            (71, G["loop"]): ("REDUCE", G["comp -> arith = arith"]),
            (72, G["pool"]): ("REDUCE", G["expr -> not expr"]),
            (72, G[")"]): ("REDUCE", G["expr -> not expr"]),
            (72, G["then"]): ("REDUCE", G["expr -> not expr"]),
            (72, G["else"]): ("REDUCE", G["expr -> not expr"]),
            (72, G[","]): ("REDUCE", G["expr -> not expr"]),
            (72, G["in"]): ("REDUCE", G["expr -> not expr"]),
            (72, G["fi"]): ("REDUCE", G["expr -> not expr"]),
            (72, G["error"]): ("REDUCE", G["expr -> not expr"]),
            (72, G["}"]): ("REDUCE", G["expr -> not expr"]),
            (72, G["of"]): ("REDUCE", G["expr -> not expr"]),
            (72, G[";"]): ("REDUCE", G["expr -> not expr"]),
            (72, G["loop"]): ("REDUCE", G["expr -> not expr"]),
            (73, G[")"]): ("SHIFT", 74),
            (74, G["of"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["<"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G[")"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["then"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["<="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["."]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["else"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G[","]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["fi"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["error"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G[";"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["loop"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["@"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["pool"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["+"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["-"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["in"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["*"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["}"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (74, G["/"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["of"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["<"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G[")"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["then"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["<="]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["else"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["="]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G[","]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["fi"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["error"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G[";"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["loop"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["pool"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["+"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["-"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["in"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["*"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["}"]): ("REDUCE", G["factor -> ~ factor"]),
            (75, G["/"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["of"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["<"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G[")"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["then"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["<="]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["else"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["="]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G[","]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["fi"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["error"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G[";"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["loop"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["pool"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["+"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["-"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["in"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["*"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["}"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["/"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["of"]): ("SHIFT", 78),
            (78, G["id"]): ("SHIFT", 79),
            (79, G[":"]): ("SHIFT", 80),
            (80, G["type"]): ("SHIFT", 81),
            (81, G["=>"]): ("SHIFT", 82),
            (82, G["true"]): ("SHIFT", 25),
            (82, G["("]): ("SHIFT", 11),
            (82, G["{"]): ("SHIFT", 10),
            (82, G["id"]): ("SHIFT", 31),
            (82, G["not"]): ("SHIFT", 30),
            (82, G["string"]): ("SHIFT", 33),
            (82, G["let"]): ("SHIFT", 14),
            (82, G["isvoid"]): ("SHIFT", 24),
            (82, G["new"]): ("SHIFT", 22),
            (82, G["if"]): ("SHIFT", 12),
            (82, G["case"]): ("SHIFT", 21),
            (82, G["while"]): ("SHIFT", 13),
            (82, G["~"]): ("SHIFT", 27),
            (82, G["false"]): ("SHIFT", 26),
            (82, G["int"]): ("SHIFT", 34),
            (83, G["error"]): ("SHIFT", 86),
            (83, G[";"]): ("SHIFT", 84),
            (84, G["id"]): ("SHIFT", 79),
            (84, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ;"]),
            (85, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ; case-list"]),
            (86, G["esac"]): ("REDUCE", G["case-list -> id : type => expr error"]),
            (87, G["esac"]): ("SHIFT", 88),
            (88, G["pool"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G[")"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["then"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["else"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G[","]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["in"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["fi"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["error"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["}"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["of"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G[";"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["loop"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (89, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr"]),
            (89, G[","]): ("SHIFT", 90),
            (90, G["id"]): ("SHIFT", 15),
            (91, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr , declaration-list"]),
            (92, G["in"]): ("SHIFT", 93),
            (93, G["("]): ("SHIFT", 11),
            (93, G["true"]): ("SHIFT", 25),
            (93, G["let"]): ("SHIFT", 14),
            (93, G["id"]): ("SHIFT", 31),
            (93, G["if"]): ("SHIFT", 12),
            (93, G["string"]): ("SHIFT", 33),
            (93, G["while"]): ("SHIFT", 13),
            (93, G["case"]): ("SHIFT", 21),
            (93, G["isvoid"]): ("SHIFT", 24),
            (93, G["new"]): ("SHIFT", 22),
            (93, G["{"]): ("SHIFT", 10),
            (93, G["false"]): ("SHIFT", 26),
            (93, G["int"]): ("SHIFT", 34),
            (93, G["not"]): ("SHIFT", 30),
            (93, G["~"]): ("SHIFT", 27),
            (94, G["pool"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G[")"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["then"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["else"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G[","]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["in"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["fi"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["error"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["}"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["of"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G[";"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["loop"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (95, G["loop"]): ("SHIFT", 96),
            (96, G["not"]): ("SHIFT", 30),
            (96, G["isvoid"]): ("SHIFT", 24),
            (96, G["false"]): ("SHIFT", 26),
            (96, G["int"]): ("SHIFT", 34),
            (96, G["id"]): ("SHIFT", 31),
            (96, G["let"]): ("SHIFT", 14),
            (96, G["("]): ("SHIFT", 11),
            (96, G["if"]): ("SHIFT", 12),
            (96, G["true"]): ("SHIFT", 25),
            (96, G["while"]): ("SHIFT", 13),
            (96, G["string"]): ("SHIFT", 33),
            (96, G["~"]): ("SHIFT", 27),
            (96, G["case"]): ("SHIFT", 21),
            (96, G["new"]): ("SHIFT", 22),
            (96, G["{"]): ("SHIFT", 10),
            (97, G["pool"]): ("SHIFT", 98),
            (98, G["pool"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G[")"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["then"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["else"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G[","]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["in"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["fi"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["error"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["}"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["of"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G[";"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["loop"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (99, G["then"]): ("SHIFT", 100),
            (100, G["if"]): ("SHIFT", 12),
            (100, G["~"]): ("SHIFT", 27),
            (100, G["id"]): ("SHIFT", 31),
            (100, G["false"]): ("SHIFT", 26),
            (100, G["while"]): ("SHIFT", 13),
            (100, G["case"]): ("SHIFT", 21),
            (100, G["int"]): ("SHIFT", 34),
            (100, G["("]): ("SHIFT", 11),
            (100, G["true"]): ("SHIFT", 25),
            (100, G["{"]): ("SHIFT", 10),
            (100, G["isvoid"]): ("SHIFT", 24),
            (100, G["string"]): ("SHIFT", 33),
            (100, G["not"]): ("SHIFT", 30),
            (100, G["new"]): ("SHIFT", 22),
            (100, G["let"]): ("SHIFT", 14),
            (101, G["else"]): ("SHIFT", 102),
            (102, G["isvoid"]): ("SHIFT", 24),
            (102, G["false"]): ("SHIFT", 26),
            (102, G["int"]): ("SHIFT", 34),
            (102, G["id"]): ("SHIFT", 31),
            (102, G["{"]): ("SHIFT", 10),
            (102, G["("]): ("SHIFT", 11),
            (102, G["true"]): ("SHIFT", 25),
            (102, G["not"]): ("SHIFT", 30),
            (102, G["~"]): ("SHIFT", 27),
            (102, G["string"]): ("SHIFT", 33),
            (102, G["let"]): ("SHIFT", 14),
            (102, G["if"]): ("SHIFT", 12),
            (102, G["new"]): ("SHIFT", 22),
            (102, G["while"]): ("SHIFT", 13),
            (102, G["case"]): ("SHIFT", 21),
            (103, G["fi"]): ("SHIFT", 104),
            (104, G["pool"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G[")"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["then"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["else"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G[","]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["in"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["fi"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["error"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["}"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["of"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G[";"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G["loop"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (105, G[")"]): ("SHIFT", 106),
            (106, G["of"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["<"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G[")"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["then"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["<="]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["."]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["else"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["="]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G[","]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["fi"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["error"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G[";"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["loop"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["@"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["pool"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["+"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["-"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["in"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["*"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["}"]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["/"]): ("REDUCE", G["atom -> ( expr )"]),
            (107, G["}"]): ("SHIFT", 108),
            (108, G["pool"]): ("REDUCE", G["expr -> { block }"]),
            (108, G[")"]): ("REDUCE", G["expr -> { block }"]),
            (108, G["then"]): ("REDUCE", G["expr -> { block }"]),
            (108, G["else"]): ("REDUCE", G["expr -> { block }"]),
            (108, G[","]): ("REDUCE", G["expr -> { block }"]),
            (108, G["in"]): ("REDUCE", G["expr -> { block }"]),
            (108, G["fi"]): ("REDUCE", G["expr -> { block }"]),
            (108, G["error"]): ("REDUCE", G["expr -> { block }"]),
            (108, G["}"]): ("REDUCE", G["expr -> { block }"]),
            (108, G["of"]): ("REDUCE", G["expr -> { block }"]),
            (108, G[";"]): ("REDUCE", G["expr -> { block }"]),
            (108, G["loop"]): ("REDUCE", G["expr -> { block }"]),
            (109, G[";"]): ("SHIFT", 110),
            (109, G["error"]): ("SHIFT", 112),
            (110, G["true"]): ("SHIFT", 25),
            (110, G["("]): ("SHIFT", 11),
            (110, G["{"]): ("SHIFT", 10),
            (110, G["id"]): ("SHIFT", 31),
            (110, G["not"]): ("SHIFT", 30),
            (110, G["string"]): ("SHIFT", 33),
            (110, G["let"]): ("SHIFT", 14),
            (110, G["isvoid"]): ("SHIFT", 24),
            (110, G["new"]): ("SHIFT", 22),
            (110, G["if"]): ("SHIFT", 12),
            (110, G["}"]): ("REDUCE", G["block -> expr ;"]),
            (110, G["case"]): ("SHIFT", 21),
            (110, G["while"]): ("SHIFT", 13),
            (110, G["~"]): ("SHIFT", 27),
            (110, G["false"]): ("SHIFT", 26),
            (110, G["int"]): ("SHIFT", 34),
            (111, G["}"]): ("REDUCE", G["block -> expr ; block"]),
            (112, G["}"]): ("REDUCE", G["block -> expr error"]),
            (113, G["}"]): ("SHIFT", 114),
            (114, G[";"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (114, G["error"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (115, G[":"]): ("SHIFT", 116),
            (116, G["type"]): ("SHIFT", 117),
            (117, G[","]): ("SHIFT", 118),
            (117, G[")"]): ("REDUCE", G["param-list -> id : type"]),
            (118, G["id"]): ("SHIFT", 115),
            (119, G[")"]): ("REDUCE", G["param-list -> id : type , param-list"]),
            (120, G[")"]): ("SHIFT", 121),
            (121, G[":"]): ("SHIFT", 122),
            (122, G["type"]): ("SHIFT", 123),
            (123, G["{"]): ("SHIFT", 124),
            (124, G["true"]): ("SHIFT", 25),
            (124, G["if"]): ("SHIFT", 12),
            (124, G["id"]): ("SHIFT", 31),
            (124, G["string"]): ("SHIFT", 33),
            (124, G["while"]): ("SHIFT", 13),
            (124, G["case"]): ("SHIFT", 21),
            (124, G["~"]): ("SHIFT", 27),
            (124, G["new"]): ("SHIFT", 22),
            (124, G["let"]): ("SHIFT", 14),
            (124, G["{"]): ("SHIFT", 10),
            (124, G["not"]): ("SHIFT", 30),
            (124, G["false"]): ("SHIFT", 26),
            (124, G["int"]): ("SHIFT", 34),
            (124, G["isvoid"]): ("SHIFT", 24),
            (124, G["("]): ("SHIFT", 11),
            (125, G["}"]): ("SHIFT", 126),
            (126, G[";"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (126, G["error"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (127, G["type"]): ("SHIFT", 128),
            (128, G["<-"]): ("SHIFT", 129),
            (128, G[";"]): ("REDUCE", G["attribute -> id : type"]),
            (128, G["error"]): ("REDUCE", G["attribute -> id : type"]),
            (129, G["true"]): ("SHIFT", 25),
            (129, G["("]): ("SHIFT", 11),
            (129, G["{"]): ("SHIFT", 10),
            (129, G["id"]): ("SHIFT", 31),
            (129, G["not"]): ("SHIFT", 30),
            (129, G["string"]): ("SHIFT", 33),
            (129, G["let"]): ("SHIFT", 14),
            (129, G["isvoid"]): ("SHIFT", 24),
            (129, G["new"]): ("SHIFT", 22),
            (129, G["if"]): ("SHIFT", 12),
            (129, G["case"]): ("SHIFT", 21),
            (129, G["while"]): ("SHIFT", 13),
            (129, G["~"]): ("SHIFT", 27),
            (129, G["false"]): ("SHIFT", 26),
            (129, G["int"]): ("SHIFT", 34),
            (130, G[";"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (130, G["error"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (131, G["}"]): ("SHIFT", 132),
            (132, G["$"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (132, G["class"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (133, G["error"]): ("SHIFT", 141),
            (133, G[";"]): ("SHIFT", 134),
            (134, G["id"]): ("SHIFT", 4),
            (134, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (135, G["}"]): ("REDUCE", G["feature-list -> attribute ; feature-list"]),
            (136, G["error"]): ("SHIFT", 139),
            (136, G[";"]): ("SHIFT", 137),
            (137, G["id"]): ("SHIFT", 4),
            (137, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (138, G["}"]): ("REDUCE", G["feature-list -> method ; feature-list"]),
            (139, G["id"]): ("SHIFT", 4),
            (139, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (140, G["}"]): ("REDUCE", G["feature-list -> method error feature-list"]),
            (141, G["id"]): ("SHIFT", 4),
            (141, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (142, G["}"]): ("REDUCE", G["feature-list -> attribute error feature-list"]),
            (143, G["type"]): ("SHIFT", 144),
            (144, G["{"]): ("SHIFT", 145),
            (145, G["id"]): ("SHIFT", 4),
            (145, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (146, G["}"]): ("SHIFT", 147),
            (147, G["$"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (147, G["class"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (148, G["$"]): ("OK", None),
            (149, G["$"]): ("REDUCE", G["program -> class-list"]),
            (150, G["class"]): ("SHIFT", 1),
            (150, G["$"]): ("REDUCE", G["class-list -> class-def"]),
            (151, G["$"]): ("REDUCE", G["class-list -> class-def class-list"]),
        }

    @staticmethod
    def __goto_table():
        return {
            (0, G["class-def"]): 150,
            (0, G["class-list"]): 149,
            (0, G["program"]): 148,
            (3, G["attribute"]): 133,
            (3, G["method"]): 136,
            (3, G["feature-list"]): 131,
            (5, G["param-list"]): 120,
            (9, G["arith"]): 38,
            (9, G["expr"]): 113,
            (9, G["term"]): 53,
            (9, G["atom"]): 43,
            (9, G["factor"]): 56,
            (9, G["comp"]): 37,
            (9, G["function-call"]): 35,
            (10, G["expr"]): 109,
            (10, G["factor"]): 56,
            (10, G["comp"]): 37,
            (10, G["arith"]): 38,
            (10, G["term"]): 53,
            (10, G["block"]): 107,
            (10, G["atom"]): 43,
            (10, G["function-call"]): 35,
            (11, G["arith"]): 38,
            (11, G["term"]): 53,
            (11, G["function-call"]): 35,
            (11, G["atom"]): 43,
            (11, G["expr"]): 105,
            (11, G["factor"]): 56,
            (11, G["comp"]): 37,
            (12, G["term"]): 53,
            (12, G["arith"]): 38,
            (12, G["atom"]): 43,
            (12, G["factor"]): 56,
            (12, G["function-call"]): 35,
            (12, G["expr"]): 99,
            (12, G["comp"]): 37,
            (13, G["arith"]): 38,
            (13, G["comp"]): 37,
            (13, G["term"]): 53,
            (13, G["atom"]): 43,
            (13, G["function-call"]): 35,
            (13, G["expr"]): 95,
            (13, G["factor"]): 56,
            (14, G["declaration-list"]): 92,
            (18, G["declaration-list"]): 19,
            (20, G["arith"]): 38,
            (20, G["atom"]): 43,
            (20, G["comp"]): 37,
            (20, G["function-call"]): 35,
            (20, G["term"]): 53,
            (20, G["expr"]): 89,
            (20, G["factor"]): 56,
            (21, G["atom"]): 43,
            (21, G["factor"]): 56,
            (21, G["arith"]): 38,
            (21, G["term"]): 53,
            (21, G["comp"]): 37,
            (21, G["function-call"]): 35,
            (21, G["expr"]): 77,
            (24, G["atom"]): 43,
            (24, G["function-call"]): 35,
            (24, G["factor"]): 76,
            (27, G["atom"]): 43,
            (27, G["function-call"]): 35,
            (27, G["factor"]): 75,
            (29, G["term"]): 53,
            (29, G["not-empty-expr-list"]): 49,
            (29, G["expr"]): 50,
            (29, G["atom"]): 43,
            (29, G["arith"]): 38,
            (29, G["expr-list"]): 73,
            (29, G["factor"]): 56,
            (29, G["function-call"]): 35,
            (29, G["comp"]): 37,
            (30, G["arith"]): 38,
            (30, G["factor"]): 56,
            (30, G["term"]): 53,
            (30, G["atom"]): 43,
            (30, G["expr"]): 72,
            (30, G["function-call"]): 35,
            (30, G["comp"]): 37,
            (32, G["arith"]): 38,
            (32, G["factor"]): 56,
            (32, G["term"]): 53,
            (32, G["expr"]): 36,
            (32, G["atom"]): 43,
            (32, G["function-call"]): 35,
            (32, G["comp"]): 37,
            (39, G["factor"]): 56,
            (39, G["function-call"]): 35,
            (39, G["term"]): 40,
            (39, G["atom"]): 43,
            (41, G["factor"]): 42,
            (41, G["atom"]): 43,
            (41, G["function-call"]): 35,
            (46, G["term"]): 53,
            (46, G["not-empty-expr-list"]): 49,
            (46, G["expr"]): 50,
            (46, G["atom"]): 43,
            (46, G["arith"]): 38,
            (46, G["factor"]): 56,
            (46, G["function-call"]): 35,
            (46, G["expr-list"]): 47,
            (46, G["comp"]): 37,
            (51, G["term"]): 53,
            (51, G["expr"]): 50,
            (51, G["atom"]): 43,
            (51, G["arith"]): 38,
            (51, G["factor"]): 56,
            (51, G["function-call"]): 35,
            (51, G["comp"]): 37,
            (51, G["not-empty-expr-list"]): 52,
            (54, G["atom"]): 43,
            (54, G["function-call"]): 35,
            (54, G["factor"]): 55,
            (61, G["term"]): 53,
            (61, G["not-empty-expr-list"]): 49,
            (61, G["expr-list"]): 62,
            (61, G["expr"]): 50,
            (61, G["atom"]): 43,
            (61, G["arith"]): 38,
            (61, G["factor"]): 56,
            (61, G["function-call"]): 35,
            (61, G["comp"]): 37,
            (64, G["factor"]): 56,
            (64, G["function-call"]): 35,
            (64, G["term"]): 65,
            (64, G["atom"]): 43,
            (66, G["arith"]): 67,
            (66, G["term"]): 53,
            (66, G["factor"]): 56,
            (66, G["atom"]): 43,
            (66, G["function-call"]): 35,
            (68, G["term"]): 53,
            (68, G["factor"]): 56,
            (68, G["atom"]): 43,
            (68, G["arith"]): 69,
            (68, G["function-call"]): 35,
            (70, G["term"]): 53,
            (70, G["factor"]): 56,
            (70, G["atom"]): 43,
            (70, G["arith"]): 71,
            (70, G["function-call"]): 35,
            (78, G["case-list"]): 87,
            (82, G["factor"]): 56,
            (82, G["comp"]): 37,
            (82, G["expr"]): 83,
            (82, G["arith"]): 38,
            (82, G["term"]): 53,
            (82, G["atom"]): 43,
            (82, G["function-call"]): 35,
            (84, G["case-list"]): 85,
            (90, G["declaration-list"]): 91,
            (93, G["arith"]): 38,
            (93, G["factor"]): 56,
            (93, G["term"]): 53,
            (93, G["atom"]): 43,
            (93, G["function-call"]): 35,
            (93, G["expr"]): 94,
            (93, G["comp"]): 37,
            (96, G["atom"]): 43,
            (96, G["arith"]): 38,
            (96, G["term"]): 53,
            (96, G["factor"]): 56,
            (96, G["comp"]): 37,
            (96, G["expr"]): 97,
            (96, G["function-call"]): 35,
            (100, G["factor"]): 56,
            (100, G["atom"]): 43,
            (100, G["arith"]): 38,
            (100, G["comp"]): 37,
            (100, G["term"]): 53,
            (100, G["expr"]): 101,
            (100, G["function-call"]): 35,
            (102, G["arith"]): 38,
            (102, G["atom"]): 43,
            (102, G["comp"]): 37,
            (102, G["term"]): 53,
            (102, G["factor"]): 56,
            (102, G["function-call"]): 35,
            (102, G["expr"]): 103,
            (110, G["expr"]): 109,
            (110, G["factor"]): 56,
            (110, G["comp"]): 37,
            (110, G["arith"]): 38,
            (110, G["term"]): 53,
            (110, G["atom"]): 43,
            (110, G["function-call"]): 35,
            (110, G["block"]): 111,
            (118, G["param-list"]): 119,
            (124, G["arith"]): 38,
            (124, G["term"]): 53,
            (124, G["atom"]): 43,
            (124, G["expr"]): 125,
            (124, G["factor"]): 56,
            (124, G["comp"]): 37,
            (124, G["function-call"]): 35,
            (129, G["factor"]): 56,
            (129, G["comp"]): 37,
            (129, G["arith"]): 38,
            (129, G["term"]): 53,
            (129, G["atom"]): 43,
            (129, G["expr"]): 130,
            (129, G["function-call"]): 35,
            (134, G["feature-list"]): 135,
            (134, G["attribute"]): 133,
            (134, G["method"]): 136,
            (137, G["feature-list"]): 138,
            (137, G["attribute"]): 133,
            (137, G["method"]): 136,
            (139, G["feature-list"]): 140,
            (139, G["attribute"]): 133,
            (139, G["method"]): 136,
            (141, G["attribute"]): 133,
            (141, G["method"]): 136,
            (141, G["feature-list"]): 142,
            (145, G["feature-list"]): 146,
            (145, G["attribute"]): 133,
            (145, G["method"]): 136,
            (150, G["class-def"]): 150,
            (150, G["class-list"]): 151,
        }
