from abc import ABC
from cmp.parsing.parsing import ShiftReduceParser
from grammar import G


class CoolParser(ShiftReduceParser, ABC):
    def __init__(self, verbose=False):
        self.G = G
        self.verbose = verbose
        self.action = self.__action_table()
        self.goto = self.__goto_table()

    def __action_table(self):
        G = self.G
        return {
            (0, G["class"]): ("SHIFT", 1),
            (1, G["type"]): ("SHIFT", 2),
            (2, G["{"]): ("SHIFT", 3),
            (2, G["inherits"]): ("SHIFT", 137),
            (3, G["id"]): ("SHIFT", 4),
            (3, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (4, G[":"]): ("SHIFT", 124),
            (4, G["("]): ("SHIFT", 5),
            (5, G[")"]): ("SHIFT", 11),
            (5, G["id"]): ("SHIFT", 6),
            (6, G[":"]): ("SHIFT", 7),
            (7, G["type"]): ("SHIFT", 8),
            (8, G[")"]): ("REDUCE", G["param-list -> id : type"]),
            (8, G[","]): ("SHIFT", 9),
            (9, G["id"]): ("SHIFT", 6),
            (10, G[")"]): ("REDUCE", G["param-list -> id : type , param-list"]),
            (11, G[":"]): ("SHIFT", 12),
            (12, G["type"]): ("SHIFT", 13),
            (13, G["{"]): ("SHIFT", 14),
            (14, G["id"]): ("SHIFT", 15),
            (14, G["let"]): ("SHIFT", 23),
            (14, G["~"]): ("SHIFT", 37),
            (14, G["not"]): ("SHIFT", 44),
            (14, G["new"]): ("SHIFT", 31),
            (14, G["false"]): ("SHIFT", 36),
            (14, G["while"]): ("SHIFT", 22),
            (14, G["case"]): ("SHIFT", 30),
            (14, G["{"]): ("SHIFT", 19),
            (14, G["("]): ("SHIFT", 20),
            (14, G["true"]): ("SHIFT", 35),
            (14, G["integer"]): ("SHIFT", 18),
            (14, G["string"]): ("SHIFT", 17),
            (14, G["if"]): ("SHIFT", 21),
            (14, G["isvoid"]): ("SHIFT", 33),
            (15, G[";"]): ("REDUCE", G["atom -> id"]),
            (15, G["@"]): ("REDUCE", G["atom -> id"]),
            (15, G["loop"]): ("REDUCE", G["atom -> id"]),
            (15, G["pool"]): ("REDUCE", G["atom -> id"]),
            (15, G["<="]): ("REDUCE", G["atom -> id"]),
            (15, G["+"]): ("REDUCE", G["atom -> id"]),
            (15, G["in"]): ("REDUCE", G["atom -> id"]),
            (15, G["-"]): ("REDUCE", G["atom -> id"]),
            (15, G["}"]): ("REDUCE", G["atom -> id"]),
            (15, G["then"]): ("REDUCE", G["atom -> id"]),
            (15, G["*"]): ("REDUCE", G["atom -> id"]),
            (15, G["of"]): ("REDUCE", G["atom -> id"]),
            (15, G[","]): ("REDUCE", G["atom -> id"]),
            (15, G["/"]): ("REDUCE", G["atom -> id"]),
            (15, G["else"]): ("REDUCE", G["atom -> id"]),
            (15, G["<"]): ("REDUCE", G["atom -> id"]),
            (15, G[")"]): ("REDUCE", G["atom -> id"]),
            (15, G["fi"]): ("REDUCE", G["atom -> id"]),
            (15, G["."]): ("REDUCE", G["atom -> id"]),
            (15, G["="]): ("REDUCE", G["atom -> id"]),
            (15, G["<-"]): ("SHIFT", 113),
            (15, G["("]): ("SHIFT", 16),
            (16, G["case"]): ("SHIFT", 30),
            (16, G["{"]): ("SHIFT", 19),
            (16, G["new"]): ("SHIFT", 31),
            (16, G["id"]): ("SHIFT", 15),
            (16, G["false"]): ("SHIFT", 36),
            (16, G["while"]): ("SHIFT", 22),
            (16, G["let"]): ("SHIFT", 23),
            (16, G["isvoid"]): ("SHIFT", 33),
            (16, G["~"]): ("SHIFT", 37),
            (16, G["string"]): ("SHIFT", 17),
            (16, G["if"]): ("SHIFT", 21),
            (16, G["true"]): ("SHIFT", 35),
            (16, G["integer"]): ("SHIFT", 18),
            (16, G["not"]): ("SHIFT", 44),
            (16, G["("]): ("SHIFT", 20),
            (17, G[";"]): ("REDUCE", G["atom -> string"]),
            (17, G["@"]): ("REDUCE", G["atom -> string"]),
            (17, G["loop"]): ("REDUCE", G["atom -> string"]),
            (17, G["pool"]): ("REDUCE", G["atom -> string"]),
            (17, G["<="]): ("REDUCE", G["atom -> string"]),
            (17, G["+"]): ("REDUCE", G["atom -> string"]),
            (17, G["in"]): ("REDUCE", G["atom -> string"]),
            (17, G["}"]): ("REDUCE", G["atom -> string"]),
            (17, G["-"]): ("REDUCE", G["atom -> string"]),
            (17, G["then"]): ("REDUCE", G["atom -> string"]),
            (17, G["*"]): ("REDUCE", G["atom -> string"]),
            (17, G["of"]): ("REDUCE", G["atom -> string"]),
            (17, G[","]): ("REDUCE", G["atom -> string"]),
            (17, G["/"]): ("REDUCE", G["atom -> string"]),
            (17, G["else"]): ("REDUCE", G["atom -> string"]),
            (17, G["<"]): ("REDUCE", G["atom -> string"]),
            (17, G[")"]): ("REDUCE", G["atom -> string"]),
            (17, G["fi"]): ("REDUCE", G["atom -> string"]),
            (17, G["."]): ("REDUCE", G["atom -> string"]),
            (17, G["="]): ("REDUCE", G["atom -> string"]),
            (18, G[";"]): ("REDUCE", G["atom -> integer"]),
            (18, G["@"]): ("REDUCE", G["atom -> integer"]),
            (18, G["loop"]): ("REDUCE", G["atom -> integer"]),
            (18, G["pool"]): ("REDUCE", G["atom -> integer"]),
            (18, G["."]): ("REDUCE", G["atom -> integer"]),
            (18, G["+"]): ("REDUCE", G["atom -> integer"]),
            (18, G["in"]): ("REDUCE", G["atom -> integer"]),
            (18, G["-"]): ("REDUCE", G["atom -> integer"]),
            (18, G["}"]): ("REDUCE", G["atom -> integer"]),
            (18, G["then"]): ("REDUCE", G["atom -> integer"]),
            (18, G["*"]): ("REDUCE", G["atom -> integer"]),
            (18, G["of"]): ("REDUCE", G["atom -> integer"]),
            (18, G[","]): ("REDUCE", G["atom -> integer"]),
            (18, G["/"]): ("REDUCE", G["atom -> integer"]),
            (18, G["else"]): ("REDUCE", G["atom -> integer"]),
            (18, G["<"]): ("REDUCE", G["atom -> integer"]),
            (18, G[")"]): ("REDUCE", G["atom -> integer"]),
            (18, G["fi"]): ("REDUCE", G["atom -> integer"]),
            (18, G["<="]): ("REDUCE", G["atom -> integer"]),
            (18, G["="]): ("REDUCE", G["atom -> integer"]),
            (19, G["string"]): ("SHIFT", 17),
            (19, G["id"]): ("SHIFT", 15),
            (19, G["true"]): ("SHIFT", 35),
            (19, G["integer"]): ("SHIFT", 18),
            (19, G["not"]): ("SHIFT", 44),
            (19, G["if"]): ("SHIFT", 21),
            (19, G["("]): ("SHIFT", 20),
            (19, G["new"]): ("SHIFT", 31),
            (19, G["let"]): ("SHIFT", 23),
            (19, G["{"]): ("SHIFT", 19),
            (19, G["case"]): ("SHIFT", 30),
            (19, G["false"]): ("SHIFT", 36),
            (19, G["isvoid"]): ("SHIFT", 33),
            (19, G["while"]): ("SHIFT", 22),
            (19, G["~"]): ("SHIFT", 37),
            (20, G["false"]): ("SHIFT", 36),
            (20, G["while"]): ("SHIFT", 22),
            (20, G["let"]): ("SHIFT", 23),
            (20, G["case"]): ("SHIFT", 30),
            (20, G["id"]): ("SHIFT", 15),
            (20, G["new"]): ("SHIFT", 31),
            (20, G["{"]): ("SHIFT", 19),
            (20, G["if"]): ("SHIFT", 21),
            (20, G["integer"]): ("SHIFT", 18),
            (20, G["true"]): ("SHIFT", 35),
            (20, G["isvoid"]): ("SHIFT", 33),
            (20, G["("]): ("SHIFT", 20),
            (20, G["not"]): ("SHIFT", 44),
            (20, G["~"]): ("SHIFT", 37),
            (20, G["string"]): ("SHIFT", 17),
            (21, G["isvoid"]): ("SHIFT", 33),
            (21, G["string"]): ("SHIFT", 17),
            (21, G["if"]): ("SHIFT", 21),
            (21, G["("]): ("SHIFT", 20),
            (21, G["id"]): ("SHIFT", 15),
            (21, G["true"]): ("SHIFT", 35),
            (21, G["integer"]): ("SHIFT", 18),
            (21, G["{"]): ("SHIFT", 19),
            (21, G["not"]): ("SHIFT", 44),
            (21, G["while"]): ("SHIFT", 22),
            (21, G["case"]): ("SHIFT", 30),
            (21, G["~"]): ("SHIFT", 37),
            (21, G["new"]): ("SHIFT", 31),
            (21, G["false"]): ("SHIFT", 36),
            (21, G["let"]): ("SHIFT", 23),
            (22, G["id"]): ("SHIFT", 15),
            (22, G["isvoid"]): ("SHIFT", 33),
            (22, G["("]): ("SHIFT", 20),
            (22, G["not"]): ("SHIFT", 44),
            (22, G["~"]): ("SHIFT", 37),
            (22, G["if"]): ("SHIFT", 21),
            (22, G["string"]): ("SHIFT", 17),
            (22, G["false"]): ("SHIFT", 36),
            (22, G["while"]): ("SHIFT", 22),
            (22, G["let"]): ("SHIFT", 23),
            (22, G["case"]): ("SHIFT", 30),
            (22, G["new"]): ("SHIFT", 31),
            (22, G["{"]): ("SHIFT", 19),
            (22, G["integer"]): ("SHIFT", 18),
            (22, G["true"]): ("SHIFT", 35),
            (23, G["id"]): ("SHIFT", 24),
            (24, G[":"]): ("SHIFT", 25),
            (25, G["type"]): ("SHIFT", 26),
            (26, G["<-"]): ("SHIFT", 29),
            (26, G["in"]): ("REDUCE", G["declaration-list -> id : type"]),
            (26, G[","]): ("SHIFT", 27),
            (27, G["id"]): ("SHIFT", 24),
            (28, G["in"]): ("REDUCE", G["declaration-list -> id : type , declaration-list"]),
            (29, G["new"]): ("SHIFT", 31),
            (29, G["string"]): ("SHIFT", 17),
            (29, G["true"]): ("SHIFT", 35),
            (29, G["integer"]): ("SHIFT", 18),
            (29, G["let"]): ("SHIFT", 23),
            (29, G["{"]): ("SHIFT", 19),
            (29, G["case"]): ("SHIFT", 30),
            (29, G["id"]): ("SHIFT", 15),
            (29, G["while"]): ("SHIFT", 22),
            (29, G["not"]): ("SHIFT", 44),
            (29, G["if"]): ("SHIFT", 21),
            (29, G["isvoid"]): ("SHIFT", 33),
            (29, G["~"]): ("SHIFT", 37),
            (29, G["("]): ("SHIFT", 20),
            (29, G["false"]): ("SHIFT", 36),
            (30, G["let"]): ("SHIFT", 23),
            (30, G["true"]): ("SHIFT", 35),
            (30, G["integer"]): ("SHIFT", 18),
            (30, G["not"]): ("SHIFT", 44),
            (30, G["~"]): ("SHIFT", 37),
            (30, G["id"]): ("SHIFT", 15),
            (30, G["isvoid"]): ("SHIFT", 33),
            (30, G["string"]): ("SHIFT", 17),
            (30, G["new"]): ("SHIFT", 31),
            (30, G["("]): ("SHIFT", 20),
            (30, G["false"]): ("SHIFT", 36),
            (30, G["{"]): ("SHIFT", 19),
            (30, G["while"]): ("SHIFT", 22),
            (30, G["case"]): ("SHIFT", 30),
            (30, G["if"]): ("SHIFT", 21),
            (31, G["type"]): ("SHIFT", 32),
            (32, G[";"]): ("REDUCE", G["atom -> new type"]),
            (32, G["@"]): ("REDUCE", G["atom -> new type"]),
            (32, G["loop"]): ("REDUCE", G["atom -> new type"]),
            (32, G["pool"]): ("REDUCE", G["atom -> new type"]),
            (32, G["<="]): ("REDUCE", G["atom -> new type"]),
            (32, G["+"]): ("REDUCE", G["atom -> new type"]),
            (32, G["in"]): ("REDUCE", G["atom -> new type"]),
            (32, G["}"]): ("REDUCE", G["atom -> new type"]),
            (32, G["-"]): ("REDUCE", G["atom -> new type"]),
            (32, G["="]): ("REDUCE", G["atom -> new type"]),
            (32, G["then"]): ("REDUCE", G["atom -> new type"]),
            (32, G["*"]): ("REDUCE", G["atom -> new type"]),
            (32, G["of"]): ("REDUCE", G["atom -> new type"]),
            (32, G["/"]): ("REDUCE", G["atom -> new type"]),
            (32, G["else"]): ("REDUCE", G["atom -> new type"]),
            (32, G["<"]): ("REDUCE", G["atom -> new type"]),
            (32, G[")"]): ("REDUCE", G["atom -> new type"]),
            (32, G["fi"]): ("REDUCE", G["atom -> new type"]),
            (32, G["."]): ("REDUCE", G["atom -> new type"]),
            (32, G[","]): ("REDUCE", G["atom -> new type"]),
            (33, G["~"]): ("SHIFT", 37),
            (33, G["isvoid"]): ("SHIFT", 33),
            (33, G["id"]): ("SHIFT", 34),
            (33, G["integer"]): ("SHIFT", 18),
            (33, G["true"]): ("SHIFT", 35),
            (33, G["false"]): ("SHIFT", 36),
            (33, G["("]): ("SHIFT", 20),
            (33, G["string"]): ("SHIFT", 17),
            (33, G["new"]): ("SHIFT", 31),
            (34, G[";"]): ("REDUCE", G["atom -> id"]),
            (34, G["@"]): ("REDUCE", G["atom -> id"]),
            (34, G["loop"]): ("REDUCE", G["atom -> id"]),
            (34, G["pool"]): ("REDUCE", G["atom -> id"]),
            (34, G["<="]): ("REDUCE", G["atom -> id"]),
            (34, G["+"]): ("REDUCE", G["atom -> id"]),
            (34, G["in"]): ("REDUCE", G["atom -> id"]),
            (34, G["-"]): ("REDUCE", G["atom -> id"]),
            (34, G["}"]): ("REDUCE", G["atom -> id"]),
            (34, G["="]): ("REDUCE", G["atom -> id"]),
            (34, G["then"]): ("REDUCE", G["atom -> id"]),
            (34, G["*"]): ("REDUCE", G["atom -> id"]),
            (34, G["of"]): ("REDUCE", G["atom -> id"]),
            (34, G["/"]): ("REDUCE", G["atom -> id"]),
            (34, G["else"]): ("REDUCE", G["atom -> id"]),
            (34, G["<"]): ("REDUCE", G["atom -> id"]),
            (34, G[")"]): ("REDUCE", G["atom -> id"]),
            (34, G["fi"]): ("REDUCE", G["atom -> id"]),
            (34, G["."]): ("REDUCE", G["atom -> id"]),
            (34, G[","]): ("REDUCE", G["atom -> id"]),
            (34, G["("]): ("SHIFT", 16),
            (35, G[";"]): ("REDUCE", G["atom -> true"]),
            (35, G["@"]): ("REDUCE", G["atom -> true"]),
            (35, G["loop"]): ("REDUCE", G["atom -> true"]),
            (35, G["pool"]): ("REDUCE", G["atom -> true"]),
            (35, G["<="]): ("REDUCE", G["atom -> true"]),
            (35, G["+"]): ("REDUCE", G["atom -> true"]),
            (35, G["in"]): ("REDUCE", G["atom -> true"]),
            (35, G["-"]): ("REDUCE", G["atom -> true"]),
            (35, G["}"]): ("REDUCE", G["atom -> true"]),
            (35, G["then"]): ("REDUCE", G["atom -> true"]),
            (35, G["*"]): ("REDUCE", G["atom -> true"]),
            (35, G["of"]): ("REDUCE", G["atom -> true"]),
            (35, G[","]): ("REDUCE", G["atom -> true"]),
            (35, G["/"]): ("REDUCE", G["atom -> true"]),
            (35, G["else"]): ("REDUCE", G["atom -> true"]),
            (35, G["<"]): ("REDUCE", G["atom -> true"]),
            (35, G[")"]): ("REDUCE", G["atom -> true"]),
            (35, G["fi"]): ("REDUCE", G["atom -> true"]),
            (35, G["."]): ("REDUCE", G["atom -> true"]),
            (35, G["="]): ("REDUCE", G["atom -> true"]),
            (36, G[";"]): ("REDUCE", G["atom -> false"]),
            (36, G["@"]): ("REDUCE", G["atom -> false"]),
            (36, G["loop"]): ("REDUCE", G["atom -> false"]),
            (36, G["pool"]): ("REDUCE", G["atom -> false"]),
            (36, G["<="]): ("REDUCE", G["atom -> false"]),
            (36, G["+"]): ("REDUCE", G["atom -> false"]),
            (36, G["in"]): ("REDUCE", G["atom -> false"]),
            (36, G["-"]): ("REDUCE", G["atom -> false"]),
            (36, G["}"]): ("REDUCE", G["atom -> false"]),
            (36, G["then"]): ("REDUCE", G["atom -> false"]),
            (36, G["*"]): ("REDUCE", G["atom -> false"]),
            (36, G["of"]): ("REDUCE", G["atom -> false"]),
            (36, G[","]): ("REDUCE", G["atom -> false"]),
            (36, G["/"]): ("REDUCE", G["atom -> false"]),
            (36, G["else"]): ("REDUCE", G["atom -> false"]),
            (36, G["<"]): ("REDUCE", G["atom -> false"]),
            (36, G[")"]): ("REDUCE", G["atom -> false"]),
            (36, G["fi"]): ("REDUCE", G["atom -> false"]),
            (36, G["."]): ("REDUCE", G["atom -> false"]),
            (36, G["="]): ("REDUCE", G["atom -> false"]),
            (37, G["~"]): ("SHIFT", 37),
            (37, G["isvoid"]): ("SHIFT", 33),
            (37, G["id"]): ("SHIFT", 34),
            (37, G["integer"]): ("SHIFT", 18),
            (37, G["true"]): ("SHIFT", 35),
            (37, G["false"]): ("SHIFT", 36),
            (37, G["("]): ("SHIFT", 20),
            (37, G["string"]): ("SHIFT", 17),
            (37, G["new"]): ("SHIFT", 31),
            (38, G[";"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["@"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["loop"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["pool"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["."]): ("REDUCE", G["atom -> function-call"]),
            (38, G["+"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["in"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["-"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["}"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["then"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["*"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["of"]): ("REDUCE", G["atom -> function-call"]),
            (38, G[","]): ("REDUCE", G["atom -> function-call"]),
            (38, G["/"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["else"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["<"]): ("REDUCE", G["atom -> function-call"]),
            (38, G[")"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["fi"]): ("REDUCE", G["atom -> function-call"]),
            (38, G["<="]): ("REDUCE", G["atom -> function-call"]),
            (38, G["="]): ("REDUCE", G["atom -> function-call"]),
            (39, G[";"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["loop"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["pool"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["+"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["in"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["}"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["-"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["="]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["then"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["*"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["of"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["/"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["else"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["<"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G[")"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["fi"]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G["<="]): ("REDUCE", G["factor -> ~ factor"]),
            (39, G[","]): ("REDUCE", G["factor -> ~ factor"]),
            (40, G["."]): ("SHIFT", 41),
            (40, G[";"]): ("REDUCE", G["factor -> atom"]),
            (40, G["loop"]): ("REDUCE", G["factor -> atom"]),
            (40, G["pool"]): ("REDUCE", G["factor -> atom"]),
            (40, G["+"]): ("REDUCE", G["factor -> atom"]),
            (40, G["in"]): ("REDUCE", G["factor -> atom"]),
            (40, G["}"]): ("REDUCE", G["factor -> atom"]),
            (40, G["-"]): ("REDUCE", G["factor -> atom"]),
            (40, G["then"]): ("REDUCE", G["factor -> atom"]),
            (40, G["*"]): ("REDUCE", G["factor -> atom"]),
            (40, G["of"]): ("REDUCE", G["factor -> atom"]),
            (40, G[","]): ("REDUCE", G["factor -> atom"]),
            (40, G["/"]): ("REDUCE", G["factor -> atom"]),
            (40, G["else"]): ("REDUCE", G["factor -> atom"]),
            (40, G["<"]): ("REDUCE", G["factor -> atom"]),
            (40, G[")"]): ("REDUCE", G["factor -> atom"]),
            (40, G["fi"]): ("REDUCE", G["factor -> atom"]),
            (40, G["<="]): ("REDUCE", G["factor -> atom"]),
            (40, G["="]): ("REDUCE", G["factor -> atom"]),
            (40, G["@"]): ("SHIFT", 69),
            (41, G["id"]): ("SHIFT", 42),
            (42, G["("]): ("SHIFT", 43),
            (43, G["case"]): ("SHIFT", 30),
            (43, G["{"]): ("SHIFT", 19),
            (43, G["new"]): ("SHIFT", 31),
            (43, G["id"]): ("SHIFT", 15),
            (43, G["false"]): ("SHIFT", 36),
            (43, G["while"]): ("SHIFT", 22),
            (43, G["let"]): ("SHIFT", 23),
            (43, G["isvoid"]): ("SHIFT", 33),
            (43, G["~"]): ("SHIFT", 37),
            (43, G["string"]): ("SHIFT", 17),
            (43, G["if"]): ("SHIFT", 21),
            (43, G["true"]): ("SHIFT", 35),
            (43, G["integer"]): ("SHIFT", 18),
            (43, G["not"]): ("SHIFT", 44),
            (43, G["("]): ("SHIFT", 20),
            (44, G["~"]): ("SHIFT", 37),
            (44, G["let"]): ("SHIFT", 23),
            (44, G["id"]): ("SHIFT", 15),
            (44, G["false"]): ("SHIFT", 36),
            (44, G["case"]): ("SHIFT", 30),
            (44, G["("]): ("SHIFT", 20),
            (44, G["new"]): ("SHIFT", 31),
            (44, G["isvoid"]): ("SHIFT", 33),
            (44, G["while"]): ("SHIFT", 22),
            (44, G["{"]): ("SHIFT", 19),
            (44, G["not"]): ("SHIFT", 44),
            (44, G["integer"]): ("SHIFT", 18),
            (44, G["true"]): ("SHIFT", 35),
            (44, G["string"]): ("SHIFT", 17),
            (44, G["if"]): ("SHIFT", 21),
            (45, G["in"]): ("REDUCE", G["expr -> not expr"]),
            (45, G[";"]): ("REDUCE", G["expr -> not expr"]),
            (45, G["}"]): ("REDUCE", G["expr -> not expr"]),
            (45, G["loop"]): ("REDUCE", G["expr -> not expr"]),
            (45, G["then"]): ("REDUCE", G["expr -> not expr"]),
            (45, G["of"]): ("REDUCE", G["expr -> not expr"]),
            (45, G["pool"]): ("REDUCE", G["expr -> not expr"]),
            (45, G["else"]): ("REDUCE", G["expr -> not expr"]),
            (45, G[")"]): ("REDUCE", G["expr -> not expr"]),
            (45, G["fi"]): ("REDUCE", G["expr -> not expr"]),
            (45, G[","]): ("REDUCE", G["expr -> not expr"]),
            (46, G["in"]): ("REDUCE", G["expr -> comp"]),
            (46, G["}"]): ("REDUCE", G["expr -> comp"]),
            (46, G[";"]): ("REDUCE", G["expr -> comp"]),
            (46, G["loop"]): ("REDUCE", G["expr -> comp"]),
            (46, G["then"]): ("REDUCE", G["expr -> comp"]),
            (46, G["of"]): ("REDUCE", G["expr -> comp"]),
            (46, G["pool"]): ("REDUCE", G["expr -> comp"]),
            (46, G["else"]): ("REDUCE", G["expr -> comp"]),
            (46, G[")"]): ("REDUCE", G["expr -> comp"]),
            (46, G["fi"]): ("REDUCE", G["expr -> comp"]),
            (46, G[","]): ("REDUCE", G["expr -> comp"]),
            (47, G["-"]): ("SHIFT", 55),
            (47, G["in"]): ("REDUCE", G["comp -> arith"]),
            (47, G["}"]): ("REDUCE", G["comp -> arith"]),
            (47, G[";"]): ("REDUCE", G["comp -> arith"]),
            (47, G["loop"]): ("REDUCE", G["comp -> arith"]),
            (47, G["then"]): ("REDUCE", G["comp -> arith"]),
            (47, G["of"]): ("REDUCE", G["comp -> arith"]),
            (47, G["pool"]): ("REDUCE", G["comp -> arith"]),
            (47, G["else"]): ("REDUCE", G["comp -> arith"]),
            (47, G[")"]): ("REDUCE", G["comp -> arith"]),
            (47, G["fi"]): ("REDUCE", G["comp -> arith"]),
            (47, G[","]): ("REDUCE", G["comp -> arith"]),
            (47, G["<"]): ("SHIFT", 57),
            (47, G["<="]): ("SHIFT", 60),
            (47, G["+"]): ("SHIFT", 48),
            (47, G["="]): ("SHIFT", 62),
            (48, G["~"]): ("SHIFT", 37),
            (48, G["isvoid"]): ("SHIFT", 33),
            (48, G["integer"]): ("SHIFT", 18),
            (48, G["true"]): ("SHIFT", 35),
            (48, G["id"]): ("SHIFT", 34),
            (48, G["string"]): ("SHIFT", 17),
            (48, G["false"]): ("SHIFT", 36),
            (48, G["("]): ("SHIFT", 20),
            (48, G["new"]): ("SHIFT", 31),
            (49, G["*"]): ("SHIFT", 50),
            (49, G["/"]): ("SHIFT", 52),
            (49, G[";"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["loop"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["pool"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["+"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["in"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["-"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["}"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["then"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["of"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G[","]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["else"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["<"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G[")"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["fi"]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["<="]): ("REDUCE", G["arith -> arith + term"]),
            (49, G["="]): ("REDUCE", G["arith -> arith + term"]),
            (50, G["~"]): ("SHIFT", 37),
            (50, G["isvoid"]): ("SHIFT", 33),
            (50, G["id"]): ("SHIFT", 34),
            (50, G["integer"]): ("SHIFT", 18),
            (50, G["true"]): ("SHIFT", 35),
            (50, G["false"]): ("SHIFT", 36),
            (50, G["("]): ("SHIFT", 20),
            (50, G["string"]): ("SHIFT", 17),
            (50, G["new"]): ("SHIFT", 31),
            (51, G[";"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["loop"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["pool"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["+"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["in"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["-"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["}"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["then"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["*"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["of"]): ("REDUCE", G["term -> term * factor"]),
            (51, G[","]): ("REDUCE", G["term -> term * factor"]),
            (51, G["/"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["else"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["<"]): ("REDUCE", G["term -> term * factor"]),
            (51, G[")"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["fi"]): ("REDUCE", G["term -> term * factor"]),
            (51, G["<="]): ("REDUCE", G["term -> term * factor"]),
            (51, G["="]): ("REDUCE", G["term -> term * factor"]),
            (52, G["~"]): ("SHIFT", 37),
            (52, G["isvoid"]): ("SHIFT", 33),
            (52, G["id"]): ("SHIFT", 34),
            (52, G["integer"]): ("SHIFT", 18),
            (52, G["true"]): ("SHIFT", 35),
            (52, G["false"]): ("SHIFT", 36),
            (52, G["("]): ("SHIFT", 20),
            (52, G["string"]): ("SHIFT", 17),
            (52, G["new"]): ("SHIFT", 31),
            (53, G[";"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["loop"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["pool"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["+"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["in"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["-"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["}"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["then"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["*"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["of"]): ("REDUCE", G["term -> term / factor"]),
            (53, G[","]): ("REDUCE", G["term -> term / factor"]),
            (53, G["/"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["else"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["<"]): ("REDUCE", G["term -> term / factor"]),
            (53, G[")"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["fi"]): ("REDUCE", G["term -> term / factor"]),
            (53, G["<="]): ("REDUCE", G["term -> term / factor"]),
            (53, G["="]): ("REDUCE", G["term -> term / factor"]),
            (54, G[";"]): ("REDUCE", G["term -> factor"]),
            (54, G["loop"]): ("REDUCE", G["term -> factor"]),
            (54, G["pool"]): ("REDUCE", G["term -> factor"]),
            (54, G["+"]): ("REDUCE", G["term -> factor"]),
            (54, G["in"]): ("REDUCE", G["term -> factor"]),
            (54, G["-"]): ("REDUCE", G["term -> factor"]),
            (54, G["}"]): ("REDUCE", G["term -> factor"]),
            (54, G["then"]): ("REDUCE", G["term -> factor"]),
            (54, G["*"]): ("REDUCE", G["term -> factor"]),
            (54, G["of"]): ("REDUCE", G["term -> factor"]),
            (54, G[","]): ("REDUCE", G["term -> factor"]),
            (54, G["/"]): ("REDUCE", G["term -> factor"]),
            (54, G["else"]): ("REDUCE", G["term -> factor"]),
            (54, G["<"]): ("REDUCE", G["term -> factor"]),
            (54, G[")"]): ("REDUCE", G["term -> factor"]),
            (54, G["fi"]): ("REDUCE", G["term -> factor"]),
            (54, G["<="]): ("REDUCE", G["term -> factor"]),
            (54, G["="]): ("REDUCE", G["term -> factor"]),
            (55, G["~"]): ("SHIFT", 37),
            (55, G["isvoid"]): ("SHIFT", 33),
            (55, G["integer"]): ("SHIFT", 18),
            (55, G["true"]): ("SHIFT", 35),
            (55, G["id"]): ("SHIFT", 34),
            (55, G["string"]): ("SHIFT", 17),
            (55, G["false"]): ("SHIFT", 36),
            (55, G["("]): ("SHIFT", 20),
            (55, G["new"]): ("SHIFT", 31),
            (56, G["*"]): ("SHIFT", 50),
            (56, G[";"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["loop"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["pool"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["+"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["in"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["}"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["-"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["then"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["of"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G[","]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["else"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["<"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G[")"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["fi"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["<="]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["="]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["/"]): ("SHIFT", 52),
            (57, G["string"]): ("SHIFT", 17),
            (57, G["new"]): ("SHIFT", 31),
            (57, G["("]): ("SHIFT", 20),
            (57, G["false"]): ("SHIFT", 36),
            (57, G["id"]): ("SHIFT", 34),
            (57, G["isvoid"]): ("SHIFT", 33),
            (57, G["~"]): ("SHIFT", 37),
            (57, G["integer"]): ("SHIFT", 18),
            (57, G["true"]): ("SHIFT", 35),
            (58, G["+"]): ("SHIFT", 48),
            (58, G["in"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["}"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G[";"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["loop"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["then"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["of"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["pool"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["else"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G[")"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["fi"]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G[","]): ("REDUCE", G["comp -> arith < arith"]),
            (58, G["-"]): ("SHIFT", 55),
            (59, G["*"]): ("SHIFT", 50),
            (59, G["/"]): ("SHIFT", 52),
            (59, G[";"]): ("REDUCE", G["arith -> term"]),
            (59, G["loop"]): ("REDUCE", G["arith -> term"]),
            (59, G["pool"]): ("REDUCE", G["arith -> term"]),
            (59, G["+"]): ("REDUCE", G["arith -> term"]),
            (59, G["in"]): ("REDUCE", G["arith -> term"]),
            (59, G["-"]): ("REDUCE", G["arith -> term"]),
            (59, G["}"]): ("REDUCE", G["arith -> term"]),
            (59, G["then"]): ("REDUCE", G["arith -> term"]),
            (59, G["of"]): ("REDUCE", G["arith -> term"]),
            (59, G[","]): ("REDUCE", G["arith -> term"]),
            (59, G["else"]): ("REDUCE", G["arith -> term"]),
            (59, G["<"]): ("REDUCE", G["arith -> term"]),
            (59, G[")"]): ("REDUCE", G["arith -> term"]),
            (59, G["fi"]): ("REDUCE", G["arith -> term"]),
            (59, G["<="]): ("REDUCE", G["arith -> term"]),
            (59, G["="]): ("REDUCE", G["arith -> term"]),
            (60, G["string"]): ("SHIFT", 17),
            (60, G["new"]): ("SHIFT", 31),
            (60, G["("]): ("SHIFT", 20),
            (60, G["false"]): ("SHIFT", 36),
            (60, G["id"]): ("SHIFT", 34),
            (60, G["isvoid"]): ("SHIFT", 33),
            (60, G["~"]): ("SHIFT", 37),
            (60, G["integer"]): ("SHIFT", 18),
            (60, G["true"]): ("SHIFT", 35),
            (61, G["+"]): ("SHIFT", 48),
            (61, G["in"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["}"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G[";"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["loop"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["then"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["of"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["pool"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["else"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G[")"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["fi"]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G[","]): ("REDUCE", G["comp -> arith <= arith"]),
            (61, G["-"]): ("SHIFT", 55),
            (62, G["string"]): ("SHIFT", 17),
            (62, G["new"]): ("SHIFT", 31),
            (62, G["("]): ("SHIFT", 20),
            (62, G["false"]): ("SHIFT", 36),
            (62, G["id"]): ("SHIFT", 34),
            (62, G["isvoid"]): ("SHIFT", 33),
            (62, G["~"]): ("SHIFT", 37),
            (62, G["integer"]): ("SHIFT", 18),
            (62, G["true"]): ("SHIFT", 35),
            (63, G["+"]): ("SHIFT", 48),
            (63, G["in"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["}"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G[";"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["loop"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["then"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["of"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["pool"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["else"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G[")"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["fi"]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G[","]): ("REDUCE", G["comp -> arith = arith"]),
            (63, G["-"]): ("SHIFT", 55),
            (64, G[")"]): ("SHIFT", 65),
            (65, G[";"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["@"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["loop"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["pool"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["<="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["+"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["in"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["}"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["-"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["then"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["*"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["of"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["/"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["else"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["<"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G[")"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["fi"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G["."]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G[","]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (66, G[","]): ("SHIFT", 67),
            (66, G[")"]): ("REDUCE", G["expr-list -> expr"]),
            (67, G["case"]): ("SHIFT", 30),
            (67, G["{"]): ("SHIFT", 19),
            (67, G["new"]): ("SHIFT", 31),
            (67, G["id"]): ("SHIFT", 15),
            (67, G["false"]): ("SHIFT", 36),
            (67, G["while"]): ("SHIFT", 22),
            (67, G["let"]): ("SHIFT", 23),
            (67, G["isvoid"]): ("SHIFT", 33),
            (67, G["~"]): ("SHIFT", 37),
            (67, G["string"]): ("SHIFT", 17),
            (67, G["if"]): ("SHIFT", 21),
            (67, G["true"]): ("SHIFT", 35),
            (67, G["integer"]): ("SHIFT", 18),
            (67, G["not"]): ("SHIFT", 44),
            (67, G["("]): ("SHIFT", 20),
            (68, G[")"]): ("REDUCE", G["expr-list -> expr , expr-list"]),
            (69, G["type"]): ("SHIFT", 70),
            (70, G["."]): ("SHIFT", 71),
            (71, G["id"]): ("SHIFT", 72),
            (72, G["("]): ("SHIFT", 73),
            (73, G["case"]): ("SHIFT", 30),
            (73, G["{"]): ("SHIFT", 19),
            (73, G["new"]): ("SHIFT", 31),
            (73, G["id"]): ("SHIFT", 15),
            (73, G["false"]): ("SHIFT", 36),
            (73, G["while"]): ("SHIFT", 22),
            (73, G["let"]): ("SHIFT", 23),
            (73, G["isvoid"]): ("SHIFT", 33),
            (73, G["~"]): ("SHIFT", 37),
            (73, G["string"]): ("SHIFT", 17),
            (73, G["if"]): ("SHIFT", 21),
            (73, G["true"]): ("SHIFT", 35),
            (73, G["integer"]): ("SHIFT", 18),
            (73, G["not"]): ("SHIFT", 44),
            (73, G["("]): ("SHIFT", 20),
            (74, G[")"]): ("SHIFT", 75),
            (75, G[";"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["@"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["loop"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["pool"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["<="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["+"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["in"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["}"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["-"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["then"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["*"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["of"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["/"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["else"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["<"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G[")"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["fi"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G["."]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (75, G[","]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (76, G[";"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["loop"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["pool"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["+"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["in"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["}"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["-"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["="]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["then"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["*"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["of"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["/"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["else"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["<"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G[")"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["fi"]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G["<="]): ("REDUCE", G["factor -> isvoid factor"]),
            (76, G[","]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["of"]): ("SHIFT", 78),
            (78, G["id"]): ("SHIFT", 79),
            (79, G[":"]): ("SHIFT", 80),
            (80, G["type"]): ("SHIFT", 81),
            (81, G["=>"]): ("SHIFT", 82),
            (82, G["string"]): ("SHIFT", 17),
            (82, G["id"]): ("SHIFT", 15),
            (82, G["true"]): ("SHIFT", 35),
            (82, G["integer"]): ("SHIFT", 18),
            (82, G["not"]): ("SHIFT", 44),
            (82, G["if"]): ("SHIFT", 21),
            (82, G["("]): ("SHIFT", 20),
            (82, G["new"]): ("SHIFT", 31),
            (82, G["let"]): ("SHIFT", 23),
            (82, G["{"]): ("SHIFT", 19),
            (82, G["case"]): ("SHIFT", 30),
            (82, G["false"]): ("SHIFT", 36),
            (82, G["isvoid"]): ("SHIFT", 33),
            (82, G["while"]): ("SHIFT", 22),
            (82, G["~"]): ("SHIFT", 37),
            (83, G[";"]): ("SHIFT", 84),
            (84, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ;"]),
            (84, G["id"]): ("SHIFT", 79),
            (85, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ; case-list"]),
            (86, G["esac"]): ("SHIFT", 87),
            (87, G["in"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G["}"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G[";"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G["loop"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G["then"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G["of"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G["pool"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G["else"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G[")"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G["fi"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (87, G[","]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (88, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr"]),
            (88, G[","]): ("SHIFT", 89),
            (89, G["id"]): ("SHIFT", 24),
            (90, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr , declaration-list"]),
            (91, G["in"]): ("SHIFT", 92),
            (92, G["~"]): ("SHIFT", 37),
            (92, G["let"]): ("SHIFT", 23),
            (92, G["id"]): ("SHIFT", 15),
            (92, G["false"]): ("SHIFT", 36),
            (92, G["case"]): ("SHIFT", 30),
            (92, G["("]): ("SHIFT", 20),
            (92, G["new"]): ("SHIFT", 31),
            (92, G["isvoid"]): ("SHIFT", 33),
            (92, G["while"]): ("SHIFT", 22),
            (92, G["{"]): ("SHIFT", 19),
            (92, G["not"]): ("SHIFT", 44),
            (92, G["integer"]): ("SHIFT", 18),
            (92, G["true"]): ("SHIFT", 35),
            (92, G["string"]): ("SHIFT", 17),
            (92, G["if"]): ("SHIFT", 21),
            (93, G["in"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G[";"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G["}"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G["loop"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G["then"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G["of"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G["pool"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G["else"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G[")"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G["fi"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (93, G[","]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (94, G["loop"]): ("SHIFT", 95),
            (95, G["string"]): ("SHIFT", 17),
            (95, G["new"]): ("SHIFT", 31),
            (95, G["false"]): ("SHIFT", 36),
            (95, G["id"]): ("SHIFT", 15),
            (95, G["let"]): ("SHIFT", 23),
            (95, G["{"]): ("SHIFT", 19),
            (95, G["while"]): ("SHIFT", 22),
            (95, G["integer"]): ("SHIFT", 18),
            (95, G["true"]): ("SHIFT", 35),
            (95, G["not"]): ("SHIFT", 44),
            (95, G["case"]): ("SHIFT", 30),
            (95, G["if"]): ("SHIFT", 21),
            (95, G["~"]): ("SHIFT", 37),
            (95, G["("]): ("SHIFT", 20),
            (95, G["isvoid"]): ("SHIFT", 33),
            (96, G["pool"]): ("SHIFT", 97),
            (97, G["in"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G["}"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G[";"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G["loop"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G["then"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G["of"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G["pool"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G["else"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G[")"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G["fi"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (97, G[","]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (98, G["then"]): ("SHIFT", 99),
            (99, G["("]): ("SHIFT", 20),
            (99, G["if"]): ("SHIFT", 21),
            (99, G["new"]): ("SHIFT", 31),
            (99, G["while"]): ("SHIFT", 22),
            (99, G["integer"]): ("SHIFT", 18),
            (99, G["true"]): ("SHIFT", 35),
            (99, G["let"]): ("SHIFT", 23),
            (99, G["case"]): ("SHIFT", 30),
            (99, G["{"]): ("SHIFT", 19),
            (99, G["~"]): ("SHIFT", 37),
            (99, G["string"]): ("SHIFT", 17),
            (99, G["isvoid"]): ("SHIFT", 33),
            (99, G["id"]): ("SHIFT", 15),
            (99, G["not"]): ("SHIFT", 44),
            (99, G["false"]): ("SHIFT", 36),
            (100, G["else"]): ("SHIFT", 101),
            (101, G["~"]): ("SHIFT", 37),
            (101, G["if"]): ("SHIFT", 21),
            (101, G["new"]): ("SHIFT", 31),
            (101, G["let"]): ("SHIFT", 23),
            (101, G["not"]): ("SHIFT", 44),
            (101, G["id"]): ("SHIFT", 15),
            (101, G["isvoid"]): ("SHIFT", 33),
            (101, G["true"]): ("SHIFT", 35),
            (101, G["integer"]): ("SHIFT", 18),
            (101, G["while"]): ("SHIFT", 22),
            (101, G["case"]): ("SHIFT", 30),
            (101, G["{"]): ("SHIFT", 19),
            (101, G["string"]): ("SHIFT", 17),
            (101, G["false"]): ("SHIFT", 36),
            (101, G["("]): ("SHIFT", 20),
            (102, G["fi"]): ("SHIFT", 103),
            (103, G["in"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G["}"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G[";"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G["loop"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G["then"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G["of"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G["pool"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G["else"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G[")"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G["fi"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (103, G[","]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (104, G[")"]): ("SHIFT", 105),
            (105, G[";"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["@"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["loop"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["pool"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["."]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["+"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["in"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["-"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["}"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["then"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["*"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["of"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G[","]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["/"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["else"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["<"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G[")"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["fi"]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["<="]): ("REDUCE", G["atom -> ( expr )"]),
            (105, G["="]): ("REDUCE", G["atom -> ( expr )"]),
            (106, G["}"]): ("SHIFT", 107),
            (107, G["in"]): ("REDUCE", G["expr -> { block }"]),
            (107, G["}"]): ("REDUCE", G["expr -> { block }"]),
            (107, G[";"]): ("REDUCE", G["expr -> { block }"]),
            (107, G["loop"]): ("REDUCE", G["expr -> { block }"]),
            (107, G["then"]): ("REDUCE", G["expr -> { block }"]),
            (107, G["of"]): ("REDUCE", G["expr -> { block }"]),
            (107, G["pool"]): ("REDUCE", G["expr -> { block }"]),
            (107, G["else"]): ("REDUCE", G["expr -> { block }"]),
            (107, G[")"]): ("REDUCE", G["expr -> { block }"]),
            (107, G["fi"]): ("REDUCE", G["expr -> { block }"]),
            (107, G[","]): ("REDUCE", G["expr -> { block }"]),
            (108, G[";"]): ("SHIFT", 109),
            (109, G["}"]): ("REDUCE", G["block -> expr ;"]),
            (109, G["string"]): ("SHIFT", 17),
            (109, G["id"]): ("SHIFT", 15),
            (109, G["true"]): ("SHIFT", 35),
            (109, G["integer"]): ("SHIFT", 18),
            (109, G["not"]): ("SHIFT", 44),
            (109, G["if"]): ("SHIFT", 21),
            (109, G["("]): ("SHIFT", 20),
            (109, G["new"]): ("SHIFT", 31),
            (109, G["let"]): ("SHIFT", 23),
            (109, G["{"]): ("SHIFT", 19),
            (109, G["case"]): ("SHIFT", 30),
            (109, G["false"]): ("SHIFT", 36),
            (109, G["isvoid"]): ("SHIFT", 33),
            (109, G["while"]): ("SHIFT", 22),
            (109, G["~"]): ("SHIFT", 37),
            (110, G["}"]): ("REDUCE", G["block -> expr ; block"]),
            (111, G[")"]): ("SHIFT", 112),
            (112, G[";"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["@"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["loop"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["pool"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["."]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["+"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["in"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["}"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["-"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["then"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["*"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["of"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G[","]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["/"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["else"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["<"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G[")"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["fi"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["<="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (112, G["="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (113, G["~"]): ("SHIFT", 37),
            (113, G["let"]): ("SHIFT", 23),
            (113, G["id"]): ("SHIFT", 15),
            (113, G["false"]): ("SHIFT", 36),
            (113, G["case"]): ("SHIFT", 30),
            (113, G["("]): ("SHIFT", 20),
            (113, G["new"]): ("SHIFT", 31),
            (113, G["isvoid"]): ("SHIFT", 33),
            (113, G["while"]): ("SHIFT", 22),
            (113, G["{"]): ("SHIFT", 19),
            (113, G["not"]): ("SHIFT", 44),
            (113, G["integer"]): ("SHIFT", 18),
            (113, G["true"]): ("SHIFT", 35),
            (113, G["string"]): ("SHIFT", 17),
            (113, G["if"]): ("SHIFT", 21),
            (114, G["in"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G["}"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G[";"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G["loop"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G["then"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G["of"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G["pool"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G["else"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G[")"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G["fi"]): ("REDUCE", G["expr -> id <- expr"]),
            (114, G[","]): ("REDUCE", G["expr -> id <- expr"]),
            (115, G["}"]): ("SHIFT", 116),
            (116, G[";"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (117, G[")"]): ("SHIFT", 118),
            (118, G[":"]): ("SHIFT", 119),
            (119, G["type"]): ("SHIFT", 120),
            (120, G["{"]): ("SHIFT", 121),
            (121, G["id"]): ("SHIFT", 15),
            (121, G["let"]): ("SHIFT", 23),
            (121, G["~"]): ("SHIFT", 37),
            (121, G["not"]): ("SHIFT", 44),
            (121, G["new"]): ("SHIFT", 31),
            (121, G["false"]): ("SHIFT", 36),
            (121, G["while"]): ("SHIFT", 22),
            (121, G["case"]): ("SHIFT", 30),
            (121, G["{"]): ("SHIFT", 19),
            (121, G["("]): ("SHIFT", 20),
            (121, G["true"]): ("SHIFT", 35),
            (121, G["integer"]): ("SHIFT", 18),
            (121, G["string"]): ("SHIFT", 17),
            (121, G["if"]): ("SHIFT", 21),
            (121, G["isvoid"]): ("SHIFT", 33),
            (122, G["}"]): ("SHIFT", 123),
            (123, G[";"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (124, G["type"]): ("SHIFT", 125),
            (125, G["<-"]): ("SHIFT", 126),
            (125, G[";"]): ("REDUCE", G["attribute -> id : type"]),
            (125, G["error"]): ("SHIFT", 128),
            (126, G["string"]): ("SHIFT", 17),
            (126, G["id"]): ("SHIFT", 15),
            (126, G["true"]): ("SHIFT", 35),
            (126, G["integer"]): ("SHIFT", 18),
            (126, G["not"]): ("SHIFT", 44),
            (126, G["if"]): ("SHIFT", 21),
            (126, G["("]): ("SHIFT", 20),
            (126, G["new"]): ("SHIFT", 31),
            (126, G["let"]): ("SHIFT", 23),
            (126, G["{"]): ("SHIFT", 19),
            (126, G["case"]): ("SHIFT", 30),
            (126, G["false"]): ("SHIFT", 36),
            (126, G["isvoid"]): ("SHIFT", 33),
            (126, G["while"]): ("SHIFT", 22),
            (126, G["~"]): ("SHIFT", 37),
            (127, G[";"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (128, G[";"]): ("REDUCE", G["attribute -> id : type error"]),
            (129, G["}"]): ("SHIFT", 130),
            (130, G["class"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (130, G["$"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (131, G[";"]): ("SHIFT", 132),
            (132, G["id"]): ("SHIFT", 4),
            (132, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (133, G["}"]): ("REDUCE", G["feature-list -> attribute ; feature-list"]),
            (134, G[";"]): ("SHIFT", 135),
            (135, G["id"]): ("SHIFT", 4),
            (135, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (136, G["}"]): ("REDUCE", G["feature-list -> method ; feature-list"]),
            (137, G["type"]): ("SHIFT", 138),
            (138, G["{"]): ("SHIFT", 139),
            (139, G["id"]): ("SHIFT", 4),
            (139, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (140, G["}"]): ("SHIFT", 141),
            (141, G["class"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (141, G["$"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (142, G["$"]): ("OK", None),
            (143, G["$"]): ("REDUCE", G["program -> class-list"]),
            (144, G["$"]): ("REDUCE", G["class-list -> class-def"]),
            (144, G["class"]): ("SHIFT", 1),
            (145, G["$"]): ("REDUCE", G["class-list -> class-def class-list"]),
        }

    def __goto_table(self):
        G = self.G
        return {
            (0, G["program"]): 142,
            (0, G["class-def"]): 144,
            (0, G["class-list"]): 143,
            (3, G["attribute"]): 131,
            (3, G["method"]): 134,
            (3, G["feature-list"]): 129,
            (5, G["param-list"]): 117,
            (9, G["param-list"]): 10,
            (14, G["arith"]): 47,
            (14, G["factor"]): 54,
            (14, G["atom"]): 40,
            (14, G["term"]): 59,
            (14, G["function-call"]): 38,
            (14, G["expr"]): 115,
            (14, G["comp"]): 46,
            (16, G["atom"]): 40,
            (16, G["expr-list"]): 111,
            (16, G["arith"]): 47,
            (16, G["term"]): 59,
            (16, G["expr"]): 66,
            (16, G["factor"]): 54,
            (16, G["comp"]): 46,
            (16, G["function-call"]): 38,
            (19, G["arith"]): 47,
            (19, G["atom"]): 40,
            (19, G["term"]): 59,
            (19, G["expr"]): 108,
            (19, G["factor"]): 54,
            (19, G["comp"]): 46,
            (19, G["function-call"]): 38,
            (19, G["block"]): 106,
            (20, G["arith"]): 47,
            (20, G["comp"]): 46,
            (20, G["function-call"]): 38,
            (20, G["term"]): 59,
            (20, G["factor"]): 54,
            (20, G["atom"]): 40,
            (20, G["expr"]): 104,
            (21, G["term"]): 59,
            (21, G["atom"]): 40,
            (21, G["arith"]): 47,
            (21, G["comp"]): 46,
            (21, G["expr"]): 98,
            (21, G["function-call"]): 38,
            (21, G["factor"]): 54,
            (22, G["atom"]): 40,
            (22, G["arith"]): 47,
            (22, G["term"]): 59,
            (22, G["expr"]): 94,
            (22, G["comp"]): 46,
            (22, G["function-call"]): 38,
            (22, G["factor"]): 54,
            (23, G["declaration-list"]): 91,
            (27, G["declaration-list"]): 28,
            (29, G["term"]): 59,
            (29, G["factor"]): 54,
            (29, G["atom"]): 40,
            (29, G["expr"]): 88,
            (29, G["arith"]): 47,
            (29, G["comp"]): 46,
            (29, G["function-call"]): 38,
            (30, G["term"]): 59,
            (30, G["arith"]): 47,
            (30, G["expr"]): 77,
            (30, G["atom"]): 40,
            (30, G["function-call"]): 38,
            (30, G["factor"]): 54,
            (30, G["comp"]): 46,
            (33, G["atom"]): 40,
            (33, G["factor"]): 76,
            (33, G["function-call"]): 38,
            (37, G["atom"]): 40,
            (37, G["factor"]): 39,
            (37, G["function-call"]): 38,
            (43, G["atom"]): 40,
            (43, G["expr-list"]): 64,
            (43, G["arith"]): 47,
            (43, G["term"]): 59,
            (43, G["expr"]): 66,
            (43, G["factor"]): 54,
            (43, G["comp"]): 46,
            (43, G["function-call"]): 38,
            (44, G["term"]): 59,
            (44, G["arith"]): 47,
            (44, G["atom"]): 40,
            (44, G["factor"]): 54,
            (44, G["function-call"]): 38,
            (44, G["expr"]): 45,
            (44, G["comp"]): 46,
            (48, G["term"]): 49,
            (48, G["atom"]): 40,
            (48, G["factor"]): 54,
            (48, G["function-call"]): 38,
            (50, G["atom"]): 40,
            (50, G["factor"]): 51,
            (50, G["function-call"]): 38,
            (52, G["factor"]): 53,
            (52, G["atom"]): 40,
            (52, G["function-call"]): 38,
            (55, G["term"]): 56,
            (55, G["atom"]): 40,
            (55, G["factor"]): 54,
            (55, G["function-call"]): 38,
            (57, G["arith"]): 58,
            (57, G["factor"]): 54,
            (57, G["term"]): 59,
            (57, G["atom"]): 40,
            (57, G["function-call"]): 38,
            (60, G["arith"]): 61,
            (60, G["factor"]): 54,
            (60, G["term"]): 59,
            (60, G["atom"]): 40,
            (60, G["function-call"]): 38,
            (62, G["arith"]): 63,
            (62, G["factor"]): 54,
            (62, G["term"]): 59,
            (62, G["atom"]): 40,
            (62, G["function-call"]): 38,
            (67, G["atom"]): 40,
            (67, G["expr-list"]): 68,
            (67, G["arith"]): 47,
            (67, G["term"]): 59,
            (67, G["expr"]): 66,
            (67, G["factor"]): 54,
            (67, G["comp"]): 46,
            (67, G["function-call"]): 38,
            (73, G["atom"]): 40,
            (73, G["expr-list"]): 74,
            (73, G["arith"]): 47,
            (73, G["term"]): 59,
            (73, G["expr"]): 66,
            (73, G["factor"]): 54,
            (73, G["comp"]): 46,
            (73, G["function-call"]): 38,
            (78, G["case-list"]): 86,
            (82, G["arith"]): 47,
            (82, G["atom"]): 40,
            (82, G["term"]): 59,
            (82, G["factor"]): 54,
            (82, G["comp"]): 46,
            (82, G["expr"]): 83,
            (82, G["function-call"]): 38,
            (84, G["case-list"]): 85,
            (89, G["declaration-list"]): 90,
            (92, G["term"]): 59,
            (92, G["arith"]): 47,
            (92, G["atom"]): 40,
            (92, G["factor"]): 54,
            (92, G["expr"]): 93,
            (92, G["function-call"]): 38,
            (92, G["comp"]): 46,
            (95, G["expr"]): 96,
            (95, G["arith"]): 47,
            (95, G["factor"]): 54,
            (95, G["atom"]): 40,
            (95, G["function-call"]): 38,
            (95, G["term"]): 59,
            (95, G["comp"]): 46,
            (99, G["expr"]): 100,
            (99, G["atom"]): 40,
            (99, G["arith"]): 47,
            (99, G["term"]): 59,
            (99, G["comp"]): 46,
            (99, G["factor"]): 54,
            (99, G["function-call"]): 38,
            (101, G["comp"]): 46,
            (101, G["term"]): 59,
            (101, G["atom"]): 40,
            (101, G["arith"]): 47,
            (101, G["expr"]): 102,
            (101, G["factor"]): 54,
            (101, G["function-call"]): 38,
            (109, G["arith"]): 47,
            (109, G["atom"]): 40,
            (109, G["term"]): 59,
            (109, G["expr"]): 108,
            (109, G["factor"]): 54,
            (109, G["comp"]): 46,
            (109, G["block"]): 110,
            (109, G["function-call"]): 38,
            (113, G["term"]): 59,
            (113, G["arith"]): 47,
            (113, G["atom"]): 40,
            (113, G["factor"]): 54,
            (113, G["function-call"]): 38,
            (113, G["expr"]): 114,
            (113, G["comp"]): 46,
            (121, G["arith"]): 47,
            (121, G["factor"]): 54,
            (121, G["atom"]): 40,
            (121, G["term"]): 59,
            (121, G["function-call"]): 38,
            (121, G["expr"]): 122,
            (121, G["comp"]): 46,
            (126, G["arith"]): 47,
            (126, G["atom"]): 40,
            (126, G["term"]): 59,
            (126, G["expr"]): 127,
            (126, G["factor"]): 54,
            (126, G["comp"]): 46,
            (126, G["function-call"]): 38,
            (132, G["attribute"]): 131,
            (132, G["method"]): 134,
            (132, G["feature-list"]): 133,
            (135, G["attribute"]): 131,
            (135, G["method"]): 134,
            (135, G["feature-list"]): 136,
            (139, G["feature-list"]): 140,
            (139, G["attribute"]): 131,
            (139, G["method"]): 134,
            (144, G["class-def"]): 144,
            (144, G["class-list"]): 145,
        }
