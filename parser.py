from abc import ABC
from cmp.parsing import ShiftReduceParser
from grammar import G


class CoolParser(ShiftReduceParser, ABC):
    def __init__(self, verbose=False):
        self.G = G
        self.verbose = verbose
        self.action = self.__action_table()
        self.goto = self.__goto_table()

    @staticmethod
    def __action_table():
        return {
            (0, G["class"]): ("SHIFT", 1),
            (1, G["type"]): ("SHIFT", 2),
            (2, G["{"]): ("SHIFT", 3),
            (2, G["inherits"]): ("SHIFT", 144),
            (3, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (3, G["id"]): ("SHIFT", 4),
            (4, G[":"]): ("SHIFT", 128),
            (4, G["("]): ("SHIFT", 5),
            (5, G[")"]): ("SHIFT", 6),
            (5, G["id"]): ("SHIFT", 116),
            (6, G[":"]): ("SHIFT", 7),
            (7, G["type"]): ("SHIFT", 8),
            (8, G["{"]): ("SHIFT", 9),
            (9, G["string"]): ("SHIFT", 34),
            (9, G["id"]): ("SHIFT", 32),
            (9, G["let"]): ("SHIFT", 14),
            (9, G["int"]): ("SHIFT", 35),
            (9, G["while"]): ("SHIFT", 13),
            (9, G["isvoid"]): ("SHIFT", 24),
            (9, G["not"]): ("SHIFT", 31),
            (9, G["if"]): ("SHIFT", 12),
            (9, G["new"]): ("SHIFT", 22),
            (9, G["{"]): ("SHIFT", 10),
            (9, G["case"]): ("SHIFT", 21),
            (9, G["("]): ("SHIFT", 11),
            (9, G["~"]): ("SHIFT", 27),
            (9, G["true"]): ("SHIFT", 25),
            (9, G["false"]): ("SHIFT", 26),
            (10, G["true"]): ("SHIFT", 25),
            (10, G["false"]): ("SHIFT", 26),
            (10, G["id"]): ("SHIFT", 32),
            (10, G["string"]): ("SHIFT", 34),
            (10, G["let"]): ("SHIFT", 14),
            (10, G["while"]): ("SHIFT", 13),
            (10, G["isvoid"]): ("SHIFT", 24),
            (10, G["if"]): ("SHIFT", 12),
            (10, G["not"]): ("SHIFT", 31),
            (10, G["int"]): ("SHIFT", 35),
            (10, G["{"]): ("SHIFT", 10),
            (10, G["case"]): ("SHIFT", 21),
            (10, G["new"]): ("SHIFT", 22),
            (10, G["~"]): ("SHIFT", 27),
            (10, G["("]): ("SHIFT", 11),
            (11, G["isvoid"]): ("SHIFT", 24),
            (11, G["int"]): ("SHIFT", 35),
            (11, G["new"]): ("SHIFT", 22),
            (11, G["~"]): ("SHIFT", 27),
            (11, G["("]): ("SHIFT", 11),
            (11, G["id"]): ("SHIFT", 32),
            (11, G["let"]): ("SHIFT", 14),
            (11, G["while"]): ("SHIFT", 13),
            (11, G["not"]): ("SHIFT", 31),
            (11, G["if"]): ("SHIFT", 12),
            (11, G["true"]): ("SHIFT", 25),
            (11, G["{"]): ("SHIFT", 10),
            (11, G["false"]): ("SHIFT", 26),
            (11, G["case"]): ("SHIFT", 21),
            (11, G["string"]): ("SHIFT", 34),
            (12, G["("]): ("SHIFT", 11),
            (12, G["isvoid"]): ("SHIFT", 24),
            (12, G["true"]): ("SHIFT", 25),
            (12, G["id"]): ("SHIFT", 32),
            (12, G["false"]): ("SHIFT", 26),
            (12, G["let"]): ("SHIFT", 14),
            (12, G["~"]): ("SHIFT", 27),
            (12, G["string"]): ("SHIFT", 34),
            (12, G["while"]): ("SHIFT", 13),
            (12, G["if"]): ("SHIFT", 12),
            (12, G["not"]): ("SHIFT", 31),
            (12, G["{"]): ("SHIFT", 10),
            (12, G["int"]): ("SHIFT", 35),
            (12, G["case"]): ("SHIFT", 21),
            (12, G["new"]): ("SHIFT", 22),
            (13, G["id"]): ("SHIFT", 32),
            (13, G["int"]): ("SHIFT", 35),
            (13, G["let"]): ("SHIFT", 14),
            (13, G["while"]): ("SHIFT", 13),
            (13, G["new"]): ("SHIFT", 22),
            (13, G["if"]): ("SHIFT", 12),
            (13, G["not"]): ("SHIFT", 31),
            (13, G["~"]): ("SHIFT", 27),
            (13, G["("]): ("SHIFT", 11),
            (13, G["{"]): ("SHIFT", 10),
            (13, G["case"]): ("SHIFT", 21),
            (13, G["true"]): ("SHIFT", 25),
            (13, G["false"]): ("SHIFT", 26),
            (13, G["string"]): ("SHIFT", 34),
            (13, G["isvoid"]): ("SHIFT", 24),
            (14, G["id"]): ("SHIFT", 15),
            (15, G[":"]): ("SHIFT", 16),
            (16, G["type"]): ("SHIFT", 17),
            (17, G["<-"]): ("SHIFT", 20),
            (17, G["in"]): ("REDUCE", G["declaration-list -> id : type"]),
            (17, G[","]): ("SHIFT", 18),
            (18, G["id"]): ("SHIFT", 15),
            (19, G["in"]): ("REDUCE", G["declaration-list -> id : type , declaration-list"]),
            (20, G["new"]): ("SHIFT", 22),
            (20, G["("]): ("SHIFT", 11),
            (20, G["id"]): ("SHIFT", 32),
            (20, G["let"]): ("SHIFT", 14),
            (20, G["while"]): ("SHIFT", 13),
            (20, G["isvoid"]): ("SHIFT", 24),
            (20, G["not"]): ("SHIFT", 31),
            (20, G["true"]): ("SHIFT", 25),
            (20, G["if"]): ("SHIFT", 12),
            (20, G["{"]): ("SHIFT", 10),
            (20, G["false"]): ("SHIFT", 26),
            (20, G["case"]): ("SHIFT", 21),
            (20, G["string"]): ("SHIFT", 34),
            (20, G["~"]): ("SHIFT", 27),
            (20, G["int"]): ("SHIFT", 35),
            (21, G["~"]): ("SHIFT", 27),
            (21, G["true"]): ("SHIFT", 25),
            (21, G["id"]): ("SHIFT", 32),
            (21, G["let"]): ("SHIFT", 14),
            (21, G["false"]): ("SHIFT", 26),
            (21, G["string"]): ("SHIFT", 34),
            (21, G["while"]): ("SHIFT", 13),
            (21, G["not"]): ("SHIFT", 31),
            (21, G["if"]): ("SHIFT", 12),
            (21, G["{"]): ("SHIFT", 10),
            (21, G["int"]): ("SHIFT", 35),
            (21, G["case"]): ("SHIFT", 21),
            (21, G["isvoid"]): ("SHIFT", 24),
            (21, G["new"]): ("SHIFT", 22),
            (21, G["("]): ("SHIFT", 11),
            (22, G["type"]): ("SHIFT", 23),
            (23, G["<"]): ("REDUCE", G["atom -> new type"]),
            (23, G[")"]): ("REDUCE", G["atom -> new type"]),
            (23, G["then"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<="]): ("REDUCE", G["atom -> new type"]),
            (23, G["."]): ("REDUCE", G["atom -> new type"]),
            (23, G["else"]): ("REDUCE", G["atom -> new type"]),
            (23, G["="]): ("REDUCE", G["atom -> new type"]),
            (23, G[","]): ("REDUCE", G["atom -> new type"]),
            (23, G["/"]): ("REDUCE", G["atom -> new type"]),
            (23, G["fi"]): ("REDUCE", G["atom -> new type"]),
            (23, G[";"]): ("REDUCE", G["atom -> new type"]),
            (23, G["loop"]): ("REDUCE", G["atom -> new type"]),
            (23, G["@"]): ("REDUCE", G["atom -> new type"]),
            (23, G["pool"]): ("REDUCE", G["atom -> new type"]),
            (23, G["+"]): ("REDUCE", G["atom -> new type"]),
            (23, G["-"]): ("REDUCE", G["atom -> new type"]),
            (23, G["error"]): ("REDUCE", G["atom -> new type"]),
            (23, G["in"]): ("REDUCE", G["atom -> new type"]),
            (23, G["*"]): ("REDUCE", G["atom -> new type"]),
            (23, G["}"]): ("REDUCE", G["atom -> new type"]),
            (23, G["of"]): ("REDUCE", G["atom -> new type"]),
            (24, G["true"]): ("SHIFT", 25),
            (24, G["new"]): ("SHIFT", 22),
            (24, G["false"]): ("SHIFT", 26),
            (24, G["~"]): ("SHIFT", 27),
            (24, G["string"]): ("SHIFT", 34),
            (24, G["id"]): ("SHIFT", 28),
            (24, G["("]): ("SHIFT", 11),
            (24, G["isvoid"]): ("SHIFT", 24),
            (24, G["int"]): ("SHIFT", 35),
            (25, G["<"]): ("REDUCE", G["atom -> true"]),
            (25, G[")"]): ("REDUCE", G["atom -> true"]),
            (25, G["then"]): ("REDUCE", G["atom -> true"]),
            (25, G["<="]): ("REDUCE", G["atom -> true"]),
            (25, G["."]): ("REDUCE", G["atom -> true"]),
            (25, G["else"]): ("REDUCE", G["atom -> true"]),
            (25, G["="]): ("REDUCE", G["atom -> true"]),
            (25, G[","]): ("REDUCE", G["atom -> true"]),
            (25, G["/"]): ("REDUCE", G["atom -> true"]),
            (25, G["fi"]): ("REDUCE", G["atom -> true"]),
            (25, G[";"]): ("REDUCE", G["atom -> true"]),
            (25, G["loop"]): ("REDUCE", G["atom -> true"]),
            (25, G["@"]): ("REDUCE", G["atom -> true"]),
            (25, G["pool"]): ("REDUCE", G["atom -> true"]),
            (25, G["+"]): ("REDUCE", G["atom -> true"]),
            (25, G["-"]): ("REDUCE", G["atom -> true"]),
            (25, G["error"]): ("REDUCE", G["atom -> true"]),
            (25, G["in"]): ("REDUCE", G["atom -> true"]),
            (25, G["*"]): ("REDUCE", G["atom -> true"]),
            (25, G["}"]): ("REDUCE", G["atom -> true"]),
            (25, G["of"]): ("REDUCE", G["atom -> true"]),
            (26, G["<"]): ("REDUCE", G["atom -> false"]),
            (26, G[")"]): ("REDUCE", G["atom -> false"]),
            (26, G["then"]): ("REDUCE", G["atom -> false"]),
            (26, G["<="]): ("REDUCE", G["atom -> false"]),
            (26, G["."]): ("REDUCE", G["atom -> false"]),
            (26, G["else"]): ("REDUCE", G["atom -> false"]),
            (26, G["="]): ("REDUCE", G["atom -> false"]),
            (26, G[","]): ("REDUCE", G["atom -> false"]),
            (26, G["/"]): ("REDUCE", G["atom -> false"]),
            (26, G["fi"]): ("REDUCE", G["atom -> false"]),
            (26, G[";"]): ("REDUCE", G["atom -> false"]),
            (26, G["loop"]): ("REDUCE", G["atom -> false"]),
            (26, G["@"]): ("REDUCE", G["atom -> false"]),
            (26, G["pool"]): ("REDUCE", G["atom -> false"]),
            (26, G["+"]): ("REDUCE", G["atom -> false"]),
            (26, G["-"]): ("REDUCE", G["atom -> false"]),
            (26, G["error"]): ("REDUCE", G["atom -> false"]),
            (26, G["in"]): ("REDUCE", G["atom -> false"]),
            (26, G["*"]): ("REDUCE", G["atom -> false"]),
            (26, G["}"]): ("REDUCE", G["atom -> false"]),
            (26, G["of"]): ("REDUCE", G["atom -> false"]),
            (27, G["true"]): ("SHIFT", 25),
            (27, G["new"]): ("SHIFT", 22),
            (27, G["false"]): ("SHIFT", 26),
            (27, G["~"]): ("SHIFT", 27),
            (27, G["string"]): ("SHIFT", 34),
            (27, G["id"]): ("SHIFT", 28),
            (27, G["("]): ("SHIFT", 11),
            (27, G["isvoid"]): ("SHIFT", 24),
            (27, G["int"]): ("SHIFT", 35),
            (28, G["("]): ("SHIFT", 29),
            (28, G["<"]): ("REDUCE", G["atom -> id"]),
            (28, G[")"]): ("REDUCE", G["atom -> id"]),
            (28, G["then"]): ("REDUCE", G["atom -> id"]),
            (28, G["<="]): ("REDUCE", G["atom -> id"]),
            (28, G["."]): ("REDUCE", G["atom -> id"]),
            (28, G["else"]): ("REDUCE", G["atom -> id"]),
            (28, G["="]): ("REDUCE", G["atom -> id"]),
            (28, G[","]): ("REDUCE", G["atom -> id"]),
            (28, G["/"]): ("REDUCE", G["atom -> id"]),
            (28, G["fi"]): ("REDUCE", G["atom -> id"]),
            (28, G[";"]): ("REDUCE", G["atom -> id"]),
            (28, G["loop"]): ("REDUCE", G["atom -> id"]),
            (28, G["@"]): ("REDUCE", G["atom -> id"]),
            (28, G["pool"]): ("REDUCE", G["atom -> id"]),
            (28, G["+"]): ("REDUCE", G["atom -> id"]),
            (28, G["-"]): ("REDUCE", G["atom -> id"]),
            (28, G["error"]): ("REDUCE", G["atom -> id"]),
            (28, G["in"]): ("REDUCE", G["atom -> id"]),
            (28, G["*"]): ("REDUCE", G["atom -> id"]),
            (28, G["}"]): ("REDUCE", G["atom -> id"]),
            (28, G["of"]): ("REDUCE", G["atom -> id"]),
            (29, G["id"]): ("SHIFT", 32),
            (29, G["while"]): ("SHIFT", 13),
            (29, G["not"]): ("SHIFT", 31),
            (29, G[")"]): ("SHIFT", 30),
            (29, G["if"]): ("SHIFT", 12),
            (29, G["~"]): ("SHIFT", 27),
            (29, G["int"]): ("SHIFT", 35),
            (29, G["{"]): ("SHIFT", 10),
            (29, G["case"]): ("SHIFT", 21),
            (29, G["new"]): ("SHIFT", 22),
            (29, G["("]): ("SHIFT", 11),
            (29, G["true"]): ("SHIFT", 25),
            (29, G["isvoid"]): ("SHIFT", 24),
            (29, G["false"]): ("SHIFT", 26),
            (29, G["string"]): ("SHIFT", 34),
            (29, G["let"]): ("SHIFT", 14),
            (30, G["<"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G[")"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["then"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["<="]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["."]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["else"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["="]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G[","]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["/"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["fi"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G[";"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["loop"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["@"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["pool"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["+"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["-"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["error"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["in"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["*"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["}"]): ("REDUCE", G["function-call -> id ( )"]),
            (30, G["of"]): ("REDUCE", G["function-call -> id ( )"]),
            (31, G["true"]): ("SHIFT", 25),
            (31, G["if"]): ("SHIFT", 12),
            (31, G["false"]): ("SHIFT", 26),
            (31, G["{"]): ("SHIFT", 10),
            (31, G["string"]): ("SHIFT", 34),
            (31, G["id"]): ("SHIFT", 32),
            (31, G["case"]): ("SHIFT", 21),
            (31, G["isvoid"]): ("SHIFT", 24),
            (31, G["int"]): ("SHIFT", 35),
            (31, G["new"]): ("SHIFT", 22),
            (31, G["~"]): ("SHIFT", 27),
            (31, G["("]): ("SHIFT", 11),
            (31, G["let"]): ("SHIFT", 14),
            (31, G["while"]): ("SHIFT", 13),
            (31, G["not"]): ("SHIFT", 31),
            (32, G["("]): ("SHIFT", 29),
            (32, G["<"]): ("REDUCE", G["atom -> id"]),
            (32, G[")"]): ("REDUCE", G["atom -> id"]),
            (32, G["then"]): ("REDUCE", G["atom -> id"]),
            (32, G["<="]): ("REDUCE", G["atom -> id"]),
            (32, G["."]): ("REDUCE", G["atom -> id"]),
            (32, G["else"]): ("REDUCE", G["atom -> id"]),
            (32, G["="]): ("REDUCE", G["atom -> id"]),
            (32, G[","]): ("REDUCE", G["atom -> id"]),
            (32, G["/"]): ("REDUCE", G["atom -> id"]),
            (32, G["fi"]): ("REDUCE", G["atom -> id"]),
            (32, G[";"]): ("REDUCE", G["atom -> id"]),
            (32, G["loop"]): ("REDUCE", G["atom -> id"]),
            (32, G["@"]): ("REDUCE", G["atom -> id"]),
            (32, G["pool"]): ("REDUCE", G["atom -> id"]),
            (32, G["+"]): ("REDUCE", G["atom -> id"]),
            (32, G["-"]): ("REDUCE", G["atom -> id"]),
            (32, G["error"]): ("REDUCE", G["atom -> id"]),
            (32, G["in"]): ("REDUCE", G["atom -> id"]),
            (32, G["*"]): ("REDUCE", G["atom -> id"]),
            (32, G["}"]): ("REDUCE", G["atom -> id"]),
            (32, G["of"]): ("REDUCE", G["atom -> id"]),
            (32, G["<-"]): ("SHIFT", 33),
            (33, G["true"]): ("SHIFT", 25),
            (33, G["if"]): ("SHIFT", 12),
            (33, G["false"]): ("SHIFT", 26),
            (33, G["{"]): ("SHIFT", 10),
            (33, G["string"]): ("SHIFT", 34),
            (33, G["id"]): ("SHIFT", 32),
            (33, G["case"]): ("SHIFT", 21),
            (33, G["isvoid"]): ("SHIFT", 24),
            (33, G["int"]): ("SHIFT", 35),
            (33, G["new"]): ("SHIFT", 22),
            (33, G["~"]): ("SHIFT", 27),
            (33, G["("]): ("SHIFT", 11),
            (33, G["let"]): ("SHIFT", 14),
            (33, G["while"]): ("SHIFT", 13),
            (33, G["not"]): ("SHIFT", 31),
            (34, G["<"]): ("REDUCE", G["atom -> string"]),
            (34, G[")"]): ("REDUCE", G["atom -> string"]),
            (34, G["then"]): ("REDUCE", G["atom -> string"]),
            (34, G["<="]): ("REDUCE", G["atom -> string"]),
            (34, G["."]): ("REDUCE", G["atom -> string"]),
            (34, G["else"]): ("REDUCE", G["atom -> string"]),
            (34, G["="]): ("REDUCE", G["atom -> string"]),
            (34, G[","]): ("REDUCE", G["atom -> string"]),
            (34, G["/"]): ("REDUCE", G["atom -> string"]),
            (34, G["fi"]): ("REDUCE", G["atom -> string"]),
            (34, G[";"]): ("REDUCE", G["atom -> string"]),
            (34, G["loop"]): ("REDUCE", G["atom -> string"]),
            (34, G["@"]): ("REDUCE", G["atom -> string"]),
            (34, G["pool"]): ("REDUCE", G["atom -> string"]),
            (34, G["+"]): ("REDUCE", G["atom -> string"]),
            (34, G["-"]): ("REDUCE", G["atom -> string"]),
            (34, G["error"]): ("REDUCE", G["atom -> string"]),
            (34, G["in"]): ("REDUCE", G["atom -> string"]),
            (34, G["*"]): ("REDUCE", G["atom -> string"]),
            (34, G["}"]): ("REDUCE", G["atom -> string"]),
            (34, G["of"]): ("REDUCE", G["atom -> string"]),
            (35, G["<"]): ("REDUCE", G["atom -> int"]),
            (35, G[")"]): ("REDUCE", G["atom -> int"]),
            (35, G["then"]): ("REDUCE", G["atom -> int"]),
            (35, G["<="]): ("REDUCE", G["atom -> int"]),
            (35, G["."]): ("REDUCE", G["atom -> int"]),
            (35, G["else"]): ("REDUCE", G["atom -> int"]),
            (35, G["="]): ("REDUCE", G["atom -> int"]),
            (35, G[","]): ("REDUCE", G["atom -> int"]),
            (35, G["/"]): ("REDUCE", G["atom -> int"]),
            (35, G["fi"]): ("REDUCE", G["atom -> int"]),
            (35, G[";"]): ("REDUCE", G["atom -> int"]),
            (35, G["loop"]): ("REDUCE", G["atom -> int"]),
            (35, G["@"]): ("REDUCE", G["atom -> int"]),
            (35, G["pool"]): ("REDUCE", G["atom -> int"]),
            (35, G["+"]): ("REDUCE", G["atom -> int"]),
            (35, G["-"]): ("REDUCE", G["atom -> int"]),
            (35, G["error"]): ("REDUCE", G["atom -> int"]),
            (35, G["in"]): ("REDUCE", G["atom -> int"]),
            (35, G["*"]): ("REDUCE", G["atom -> int"]),
            (35, G["}"]): ("REDUCE", G["atom -> int"]),
            (35, G["of"]): ("REDUCE", G["atom -> int"]),
            (36, G["<"]): ("REDUCE", G["atom -> function-call"]),
            (36, G[")"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["then"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["<="]): ("REDUCE", G["atom -> function-call"]),
            (36, G["."]): ("REDUCE", G["atom -> function-call"]),
            (36, G["else"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["="]): ("REDUCE", G["atom -> function-call"]),
            (36, G[","]): ("REDUCE", G["atom -> function-call"]),
            (36, G["/"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["fi"]): ("REDUCE", G["atom -> function-call"]),
            (36, G[";"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["loop"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["@"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["pool"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["+"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["-"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["error"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["in"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["*"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["}"]): ("REDUCE", G["atom -> function-call"]),
            (36, G["of"]): ("REDUCE", G["atom -> function-call"]),
            (37, G["loop"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["of"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G[")"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["pool"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["then"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["else"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["error"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G[","]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["in"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["fi"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G["}"]): ("REDUCE", G["expr -> id <- expr"]),
            (37, G[";"]): ("REDUCE", G["expr -> id <- expr"]),
            (38, G["loop"]): ("REDUCE", G["expr -> comp"]),
            (38, G["of"]): ("REDUCE", G["expr -> comp"]),
            (38, G[")"]): ("REDUCE", G["expr -> comp"]),
            (38, G["pool"]): ("REDUCE", G["expr -> comp"]),
            (38, G["then"]): ("REDUCE", G["expr -> comp"]),
            (38, G["else"]): ("REDUCE", G["expr -> comp"]),
            (38, G["error"]): ("REDUCE", G["expr -> comp"]),
            (38, G[","]): ("REDUCE", G["expr -> comp"]),
            (38, G["in"]): ("REDUCE", G["expr -> comp"]),
            (38, G["fi"]): ("REDUCE", G["expr -> comp"]),
            (38, G["}"]): ("REDUCE", G["expr -> comp"]),
            (38, G[";"]): ("REDUCE", G["expr -> comp"]),
            (39, G["+"]): ("SHIFT", 40),
            (39, G["-"]): ("SHIFT", 66),
            (39, G["loop"]): ("REDUCE", G["comp -> arith"]),
            (39, G["of"]): ("REDUCE", G["comp -> arith"]),
            (39, G[")"]): ("REDUCE", G["comp -> arith"]),
            (39, G["pool"]): ("REDUCE", G["comp -> arith"]),
            (39, G["then"]): ("REDUCE", G["comp -> arith"]),
            (39, G["else"]): ("REDUCE", G["comp -> arith"]),
            (39, G["error"]): ("REDUCE", G["comp -> arith"]),
            (39, G[","]): ("REDUCE", G["comp -> arith"]),
            (39, G["in"]): ("REDUCE", G["comp -> arith"]),
            (39, G["fi"]): ("REDUCE", G["comp -> arith"]),
            (39, G["}"]): ("REDUCE", G["comp -> arith"]),
            (39, G[";"]): ("REDUCE", G["comp -> arith"]),
            (39, G["="]): ("SHIFT", 72),
            (39, G["<"]): ("SHIFT", 68),
            (39, G["<="]): ("SHIFT", 70),
            (40, G["true"]): ("SHIFT", 25),
            (40, G["new"]): ("SHIFT", 22),
            (40, G["false"]): ("SHIFT", 26),
            (40, G["~"]): ("SHIFT", 27),
            (40, G["string"]): ("SHIFT", 34),
            (40, G["id"]): ("SHIFT", 28),
            (40, G["("]): ("SHIFT", 11),
            (40, G["isvoid"]): ("SHIFT", 24),
            (40, G["int"]): ("SHIFT", 35),
            (41, G["/"]): ("SHIFT", 55),
            (41, G["*"]): ("SHIFT", 42),
            (41, G["<"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G[")"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["then"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["<="]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["else"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["="]): ("REDUCE", G["arith -> arith + term"]),
            (41, G[","]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["fi"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G[";"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["loop"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["pool"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["+"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["-"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["error"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["in"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["}"]): ("REDUCE", G["arith -> arith + term"]),
            (41, G["of"]): ("REDUCE", G["arith -> arith + term"]),
            (42, G["true"]): ("SHIFT", 25),
            (42, G["new"]): ("SHIFT", 22),
            (42, G["false"]): ("SHIFT", 26),
            (42, G["~"]): ("SHIFT", 27),
            (42, G["string"]): ("SHIFT", 34),
            (42, G["id"]): ("SHIFT", 28),
            (42, G["("]): ("SHIFT", 11),
            (42, G["isvoid"]): ("SHIFT", 24),
            (42, G["int"]): ("SHIFT", 35),
            (43, G["<"]): ("REDUCE", G["term -> term * factor"]),
            (43, G[")"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["then"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["<="]): ("REDUCE", G["term -> term * factor"]),
            (43, G["else"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["="]): ("REDUCE", G["term -> term * factor"]),
            (43, G[","]): ("REDUCE", G["term -> term * factor"]),
            (43, G["/"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["fi"]): ("REDUCE", G["term -> term * factor"]),
            (43, G[";"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["loop"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["pool"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["+"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["-"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["error"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["in"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["*"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["}"]): ("REDUCE", G["term -> term * factor"]),
            (43, G["of"]): ("REDUCE", G["term -> term * factor"]),
            (44, G["."]): ("SHIFT", 45),
            (44, G["@"]): ("SHIFT", 58),
            (44, G["<"]): ("REDUCE", G["factor -> atom"]),
            (44, G[")"]): ("REDUCE", G["factor -> atom"]),
            (44, G["then"]): ("REDUCE", G["factor -> atom"]),
            (44, G["<="]): ("REDUCE", G["factor -> atom"]),
            (44, G["else"]): ("REDUCE", G["factor -> atom"]),
            (44, G["="]): ("REDUCE", G["factor -> atom"]),
            (44, G[","]): ("REDUCE", G["factor -> atom"]),
            (44, G["/"]): ("REDUCE", G["factor -> atom"]),
            (44, G["fi"]): ("REDUCE", G["factor -> atom"]),
            (44, G[";"]): ("REDUCE", G["factor -> atom"]),
            (44, G["loop"]): ("REDUCE", G["factor -> atom"]),
            (44, G["pool"]): ("REDUCE", G["factor -> atom"]),
            (44, G["+"]): ("REDUCE", G["factor -> atom"]),
            (44, G["-"]): ("REDUCE", G["factor -> atom"]),
            (44, G["error"]): ("REDUCE", G["factor -> atom"]),
            (44, G["in"]): ("REDUCE", G["factor -> atom"]),
            (44, G["*"]): ("REDUCE", G["factor -> atom"]),
            (44, G["}"]): ("REDUCE", G["factor -> atom"]),
            (44, G["of"]): ("REDUCE", G["factor -> atom"]),
            (45, G["id"]): ("SHIFT", 46),
            (46, G["("]): ("SHIFT", 47),
            (47, G["id"]): ("SHIFT", 32),
            (47, G["while"]): ("SHIFT", 13),
            (47, G[")"]): ("SHIFT", 48),
            (47, G["not"]): ("SHIFT", 31),
            (47, G["if"]): ("SHIFT", 12),
            (47, G["~"]): ("SHIFT", 27),
            (47, G["int"]): ("SHIFT", 35),
            (47, G["{"]): ("SHIFT", 10),
            (47, G["case"]): ("SHIFT", 21),
            (47, G["new"]): ("SHIFT", 22),
            (47, G["("]): ("SHIFT", 11),
            (47, G["true"]): ("SHIFT", 25),
            (47, G["isvoid"]): ("SHIFT", 24),
            (47, G["false"]): ("SHIFT", 26),
            (47, G["string"]): ("SHIFT", 34),
            (47, G["let"]): ("SHIFT", 14),
            (48, G["<"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G[")"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["then"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["<="]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["."]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["else"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["="]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G[","]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["/"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["fi"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G[";"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["loop"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["@"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["pool"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["+"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["-"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["error"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["in"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["*"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["}"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (48, G["of"]): ("REDUCE", G["function-call -> atom . id ( )"]),
            (49, G[")"]): ("SHIFT", 50),
            (50, G["<"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G[")"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["then"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["<="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["."]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["else"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G[","]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["/"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["fi"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G[";"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["loop"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["@"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["pool"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["+"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["-"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["error"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["in"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["*"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["}"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (50, G["of"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (51, G[","]): ("SHIFT", 52),
            (51, G[")"]): ("REDUCE", G["expr-list -> expr"]),
            (52, G["id"]): ("SHIFT", 32),
            (52, G["while"]): ("SHIFT", 13),
            (52, G["not"]): ("SHIFT", 31),
            (52, G["if"]): ("SHIFT", 12),
            (52, G["~"]): ("SHIFT", 27),
            (52, G["int"]): ("SHIFT", 35),
            (52, G["{"]): ("SHIFT", 10),
            (52, G["case"]): ("SHIFT", 21),
            (52, G["new"]): ("SHIFT", 22),
            (52, G["("]): ("SHIFT", 11),
            (52, G["true"]): ("SHIFT", 25),
            (52, G["isvoid"]): ("SHIFT", 24),
            (52, G["false"]): ("SHIFT", 26),
            (52, G["string"]): ("SHIFT", 34),
            (52, G["let"]): ("SHIFT", 14),
            (53, G[")"]): ("REDUCE", G["expr-list -> expr , expr-list"]),
            (54, G["<"]): ("REDUCE", G["arith -> term"]),
            (54, G[")"]): ("REDUCE", G["arith -> term"]),
            (54, G["then"]): ("REDUCE", G["arith -> term"]),
            (54, G["<="]): ("REDUCE", G["arith -> term"]),
            (54, G["else"]): ("REDUCE", G["arith -> term"]),
            (54, G["="]): ("REDUCE", G["arith -> term"]),
            (54, G[","]): ("REDUCE", G["arith -> term"]),
            (54, G["fi"]): ("REDUCE", G["arith -> term"]),
            (54, G[";"]): ("REDUCE", G["arith -> term"]),
            (54, G["loop"]): ("REDUCE", G["arith -> term"]),
            (54, G["pool"]): ("REDUCE", G["arith -> term"]),
            (54, G["+"]): ("REDUCE", G["arith -> term"]),
            (54, G["-"]): ("REDUCE", G["arith -> term"]),
            (54, G["error"]): ("REDUCE", G["arith -> term"]),
            (54, G["in"]): ("REDUCE", G["arith -> term"]),
            (54, G["}"]): ("REDUCE", G["arith -> term"]),
            (54, G["of"]): ("REDUCE", G["arith -> term"]),
            (54, G["/"]): ("SHIFT", 55),
            (54, G["*"]): ("SHIFT", 42),
            (55, G["true"]): ("SHIFT", 25),
            (55, G["new"]): ("SHIFT", 22),
            (55, G["false"]): ("SHIFT", 26),
            (55, G["~"]): ("SHIFT", 27),
            (55, G["string"]): ("SHIFT", 34),
            (55, G["id"]): ("SHIFT", 28),
            (55, G["("]): ("SHIFT", 11),
            (55, G["isvoid"]): ("SHIFT", 24),
            (55, G["int"]): ("SHIFT", 35),
            (56, G["<"]): ("REDUCE", G["term -> term / factor"]),
            (56, G[")"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["then"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["<="]): ("REDUCE", G["term -> term / factor"]),
            (56, G["else"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["="]): ("REDUCE", G["term -> term / factor"]),
            (56, G[","]): ("REDUCE", G["term -> term / factor"]),
            (56, G["/"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["fi"]): ("REDUCE", G["term -> term / factor"]),
            (56, G[";"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["loop"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["pool"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["+"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["-"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["error"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["in"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["*"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["}"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["of"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["<"]): ("REDUCE", G["term -> factor"]),
            (57, G[")"]): ("REDUCE", G["term -> factor"]),
            (57, G["then"]): ("REDUCE", G["term -> factor"]),
            (57, G["<="]): ("REDUCE", G["term -> factor"]),
            (57, G["else"]): ("REDUCE", G["term -> factor"]),
            (57, G["="]): ("REDUCE", G["term -> factor"]),
            (57, G[","]): ("REDUCE", G["term -> factor"]),
            (57, G["/"]): ("REDUCE", G["term -> factor"]),
            (57, G["fi"]): ("REDUCE", G["term -> factor"]),
            (57, G[";"]): ("REDUCE", G["term -> factor"]),
            (57, G["loop"]): ("REDUCE", G["term -> factor"]),
            (57, G["pool"]): ("REDUCE", G["term -> factor"]),
            (57, G["+"]): ("REDUCE", G["term -> factor"]),
            (57, G["-"]): ("REDUCE", G["term -> factor"]),
            (57, G["error"]): ("REDUCE", G["term -> factor"]),
            (57, G["in"]): ("REDUCE", G["term -> factor"]),
            (57, G["*"]): ("REDUCE", G["term -> factor"]),
            (57, G["}"]): ("REDUCE", G["term -> factor"]),
            (57, G["of"]): ("REDUCE", G["term -> factor"]),
            (58, G["type"]): ("SHIFT", 59),
            (59, G["."]): ("SHIFT", 60),
            (60, G["id"]): ("SHIFT", 61),
            (61, G["("]): ("SHIFT", 62),
            (62, G["id"]): ("SHIFT", 32),
            (62, G["while"]): ("SHIFT", 13),
            (62, G["not"]): ("SHIFT", 31),
            (62, G["if"]): ("SHIFT", 12),
            (62, G["~"]): ("SHIFT", 27),
            (62, G["int"]): ("SHIFT", 35),
            (62, G["{"]): ("SHIFT", 10),
            (62, G["case"]): ("SHIFT", 21),
            (62, G["new"]): ("SHIFT", 22),
            (62, G[")"]): ("SHIFT", 63),
            (62, G["("]): ("SHIFT", 11),
            (62, G["true"]): ("SHIFT", 25),
            (62, G["isvoid"]): ("SHIFT", 24),
            (62, G["false"]): ("SHIFT", 26),
            (62, G["string"]): ("SHIFT", 34),
            (62, G["let"]): ("SHIFT", 14),
            (63, G["<"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G[")"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["then"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["<="]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["."]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["else"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["="]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G[","]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["/"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["fi"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G[";"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["loop"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["@"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["pool"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["+"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["-"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["error"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["in"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["*"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["}"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (63, G["of"]): ("REDUCE", G["function-call -> atom @ type . id ( )"]),
            (64, G[")"]): ("SHIFT", 65),
            (65, G["<"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G[")"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["then"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["<="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["."]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["else"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G[","]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["/"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["fi"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G[";"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["loop"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["@"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["pool"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["+"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["-"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["error"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["in"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["*"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["}"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (65, G["of"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (66, G["true"]): ("SHIFT", 25),
            (66, G["new"]): ("SHIFT", 22),
            (66, G["false"]): ("SHIFT", 26),
            (66, G["~"]): ("SHIFT", 27),
            (66, G["string"]): ("SHIFT", 34),
            (66, G["id"]): ("SHIFT", 28),
            (66, G["("]): ("SHIFT", 11),
            (66, G["isvoid"]): ("SHIFT", 24),
            (66, G["int"]): ("SHIFT", 35),
            (67, G["/"]): ("SHIFT", 55),
            (67, G["*"]): ("SHIFT", 42),
            (67, G["<"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G[")"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["then"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["<="]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["else"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["="]): ("REDUCE", G["arith -> arith - term"]),
            (67, G[","]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["fi"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G[";"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["loop"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["pool"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["+"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["-"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["error"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["in"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["}"]): ("REDUCE", G["arith -> arith - term"]),
            (67, G["of"]): ("REDUCE", G["arith -> arith - term"]),
            (68, G["isvoid"]): ("SHIFT", 24),
            (68, G["id"]): ("SHIFT", 28),
            (68, G["("]): ("SHIFT", 11),
            (68, G["int"]): ("SHIFT", 35),
            (68, G["true"]): ("SHIFT", 25),
            (68, G["~"]): ("SHIFT", 27),
            (68, G["false"]): ("SHIFT", 26),
            (68, G["new"]): ("SHIFT", 22),
            (68, G["string"]): ("SHIFT", 34),
            (69, G["+"]): ("SHIFT", 40),
            (69, G["-"]): ("SHIFT", 66),
            (69, G["loop"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["of"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G[")"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["pool"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["then"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["else"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["error"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G[","]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["in"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["fi"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G["}"]): ("REDUCE", G["comp -> arith < arith"]),
            (69, G[";"]): ("REDUCE", G["comp -> arith < arith"]),
            (70, G["isvoid"]): ("SHIFT", 24),
            (70, G["id"]): ("SHIFT", 28),
            (70, G["("]): ("SHIFT", 11),
            (70, G["int"]): ("SHIFT", 35),
            (70, G["true"]): ("SHIFT", 25),
            (70, G["~"]): ("SHIFT", 27),
            (70, G["false"]): ("SHIFT", 26),
            (70, G["new"]): ("SHIFT", 22),
            (70, G["string"]): ("SHIFT", 34),
            (71, G["+"]): ("SHIFT", 40),
            (71, G["-"]): ("SHIFT", 66),
            (71, G["loop"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["of"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G[")"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["pool"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["then"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["else"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["error"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G[","]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["in"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["fi"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G["}"]): ("REDUCE", G["comp -> arith <= arith"]),
            (71, G[";"]): ("REDUCE", G["comp -> arith <= arith"]),
            (72, G["isvoid"]): ("SHIFT", 24),
            (72, G["id"]): ("SHIFT", 28),
            (72, G["("]): ("SHIFT", 11),
            (72, G["int"]): ("SHIFT", 35),
            (72, G["true"]): ("SHIFT", 25),
            (72, G["~"]): ("SHIFT", 27),
            (72, G["false"]): ("SHIFT", 26),
            (72, G["new"]): ("SHIFT", 22),
            (72, G["string"]): ("SHIFT", 34),
            (73, G["+"]): ("SHIFT", 40),
            (73, G["-"]): ("SHIFT", 66),
            (73, G["loop"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["of"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G[")"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["pool"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["then"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["else"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["error"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G[","]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["in"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["fi"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G["}"]): ("REDUCE", G["comp -> arith = arith"]),
            (73, G[";"]): ("REDUCE", G["comp -> arith = arith"]),
            (74, G["loop"]): ("REDUCE", G["expr -> not expr"]),
            (74, G[";"]): ("REDUCE", G["expr -> not expr"]),
            (74, G[")"]): ("REDUCE", G["expr -> not expr"]),
            (74, G["pool"]): ("REDUCE", G["expr -> not expr"]),
            (74, G["then"]): ("REDUCE", G["expr -> not expr"]),
            (74, G["else"]): ("REDUCE", G["expr -> not expr"]),
            (74, G["error"]): ("REDUCE", G["expr -> not expr"]),
            (74, G[","]): ("REDUCE", G["expr -> not expr"]),
            (74, G["in"]): ("REDUCE", G["expr -> not expr"]),
            (74, G["fi"]): ("REDUCE", G["expr -> not expr"]),
            (74, G["}"]): ("REDUCE", G["expr -> not expr"]),
            (74, G["of"]): ("REDUCE", G["expr -> not expr"]),
            (75, G[")"]): ("SHIFT", 76),
            (76, G["<"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G[")"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["then"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["<="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["."]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["else"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G[","]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["/"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["fi"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G[";"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["loop"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["@"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["pool"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["+"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["-"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["error"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["in"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["*"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["}"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["of"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (77, G["<"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G[")"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["then"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["<="]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["else"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["="]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G[","]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["/"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["fi"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G[";"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["loop"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["pool"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["+"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["-"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["error"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["in"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["*"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["}"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["of"]): ("REDUCE", G["factor -> ~ factor"]),
            (78, G["<"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G[")"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["then"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["<="]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["else"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["="]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G[","]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["/"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["fi"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G[";"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["loop"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["pool"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["+"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["-"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["error"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["in"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["*"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["}"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["of"]): ("REDUCE", G["factor -> isvoid factor"]),
            (79, G["of"]): ("SHIFT", 80),
            (80, G["id"]): ("SHIFT", 81),
            (81, G[":"]): ("SHIFT", 82),
            (82, G["type"]): ("SHIFT", 83),
            (83, G["=>"]): ("SHIFT", 84),
            (84, G["id"]): ("SHIFT", 32),
            (84, G["let"]): ("SHIFT", 14),
            (84, G["while"]): ("SHIFT", 13),
            (84, G["~"]): ("SHIFT", 27),
            (84, G["true"]): ("SHIFT", 25),
            (84, G["not"]): ("SHIFT", 31),
            (84, G["if"]): ("SHIFT", 12),
            (84, G["false"]): ("SHIFT", 26),
            (84, G["{"]): ("SHIFT", 10),
            (84, G["string"]): ("SHIFT", 34),
            (84, G["case"]): ("SHIFT", 21),
            (84, G["int"]): ("SHIFT", 35),
            (84, G["new"]): ("SHIFT", 22),
            (84, G["isvoid"]): ("SHIFT", 24),
            (84, G["("]): ("SHIFT", 11),
            (85, G["error"]): ("SHIFT", 88),
            (85, G[";"]): ("SHIFT", 86),
            (86, G["id"]): ("SHIFT", 81),
            (86, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ;"]),
            (87, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ; case-list"]),
            (88, G["esac"]): ("REDUCE", G["case-list -> id : type => expr error"]),
            (89, G["esac"]): ("SHIFT", 90),
            (90, G["loop"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["of"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G[")"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["pool"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["then"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["else"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["error"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G[","]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["in"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["fi"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["}"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G[";"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (91, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr"]),
            (91, G[","]): ("SHIFT", 92),
            (92, G["id"]): ("SHIFT", 15),
            (93, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr , declaration-list"]),
            (94, G["in"]): ("SHIFT", 95),
            (95, G["true"]): ("SHIFT", 25),
            (95, G["if"]): ("SHIFT", 12),
            (95, G["false"]): ("SHIFT", 26),
            (95, G["{"]): ("SHIFT", 10),
            (95, G["string"]): ("SHIFT", 34),
            (95, G["id"]): ("SHIFT", 32),
            (95, G["case"]): ("SHIFT", 21),
            (95, G["isvoid"]): ("SHIFT", 24),
            (95, G["int"]): ("SHIFT", 35),
            (95, G["new"]): ("SHIFT", 22),
            (95, G["~"]): ("SHIFT", 27),
            (95, G["("]): ("SHIFT", 11),
            (95, G["let"]): ("SHIFT", 14),
            (95, G["while"]): ("SHIFT", 13),
            (95, G["not"]): ("SHIFT", 31),
            (96, G["loop"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G[";"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G[")"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["pool"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["then"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["else"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["error"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G[","]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["in"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["fi"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["}"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["of"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (97, G["loop"]): ("SHIFT", 98),
            (98, G["string"]): ("SHIFT", 34),
            (98, G["id"]): ("SHIFT", 32),
            (98, G["isvoid"]): ("SHIFT", 24),
            (98, G["int"]): ("SHIFT", 35),
            (98, G["let"]): ("SHIFT", 14),
            (98, G["new"]): ("SHIFT", 22),
            (98, G["while"]): ("SHIFT", 13),
            (98, G["~"]): ("SHIFT", 27),
            (98, G["not"]): ("SHIFT", 31),
            (98, G["("]): ("SHIFT", 11),
            (98, G["if"]): ("SHIFT", 12),
            (98, G["{"]): ("SHIFT", 10),
            (98, G["case"]): ("SHIFT", 21),
            (98, G["true"]): ("SHIFT", 25),
            (98, G["false"]): ("SHIFT", 26),
            (99, G["pool"]): ("SHIFT", 100),
            (100, G["loop"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["of"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G[")"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["pool"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["then"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["else"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["error"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G[","]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["in"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["fi"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["}"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G[";"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (101, G["then"]): ("SHIFT", 102),
            (102, G["{"]): ("SHIFT", 10),
            (102, G["~"]): ("SHIFT", 27),
            (102, G["case"]): ("SHIFT", 21),
            (102, G["true"]): ("SHIFT", 25),
            (102, G["false"]): ("SHIFT", 26),
            (102, G["id"]): ("SHIFT", 32),
            (102, G["string"]): ("SHIFT", 34),
            (102, G["int"]): ("SHIFT", 35),
            (102, G["isvoid"]): ("SHIFT", 24),
            (102, G["new"]): ("SHIFT", 22),
            (102, G["let"]): ("SHIFT", 14),
            (102, G["while"]): ("SHIFT", 13),
            (102, G["if"]): ("SHIFT", 12),
            (102, G["not"]): ("SHIFT", 31),
            (102, G["("]): ("SHIFT", 11),
            (103, G["else"]): ("SHIFT", 104),
            (104, G["if"]): ("SHIFT", 12),
            (104, G["{"]): ("SHIFT", 10),
            (104, G["int"]): ("SHIFT", 35),
            (104, G["case"]): ("SHIFT", 21),
            (104, G["new"]): ("SHIFT", 22),
            (104, G["isvoid"]): ("SHIFT", 24),
            (104, G["("]): ("SHIFT", 11),
            (104, G["true"]): ("SHIFT", 25),
            (104, G["~"]): ("SHIFT", 27),
            (104, G["not"]): ("SHIFT", 31),
            (104, G["id"]): ("SHIFT", 32),
            (104, G["false"]): ("SHIFT", 26),
            (104, G["string"]): ("SHIFT", 34),
            (104, G["let"]): ("SHIFT", 14),
            (104, G["while"]): ("SHIFT", 13),
            (105, G["fi"]): ("SHIFT", 106),
            (106, G["loop"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["of"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G[")"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["pool"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["then"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["else"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["error"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G[","]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["in"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["fi"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G["}"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (106, G[";"]): ("REDUCE", G["expr -> if expr then expr else expr fi"]),
            (107, G[")"]): ("SHIFT", 108),
            (108, G["<"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G[")"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["then"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["<="]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["."]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["else"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["="]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G[","]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["/"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["fi"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G[";"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["loop"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["@"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["pool"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["+"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["-"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["error"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["in"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["*"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["}"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["of"]): ("REDUCE", G["atom -> ( expr )"]),
            (109, G["}"]): ("SHIFT", 110),
            (110, G["loop"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["of"]): ("REDUCE", G["expr -> { block }"]),
            (110, G[")"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["pool"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["then"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["else"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["error"]): ("REDUCE", G["expr -> { block }"]),
            (110, G[","]): ("REDUCE", G["expr -> { block }"]),
            (110, G["in"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["fi"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["}"]): ("REDUCE", G["expr -> { block }"]),
            (110, G[";"]): ("REDUCE", G["expr -> { block }"]),
            (111, G[";"]): ("SHIFT", 112),
            (112, G["true"]): ("SHIFT", 25),
            (112, G["false"]): ("SHIFT", 26),
            (112, G["id"]): ("SHIFT", 32),
            (112, G["string"]): ("SHIFT", 34),
            (112, G["let"]): ("SHIFT", 14),
            (112, G["while"]): ("SHIFT", 13),
            (112, G["}"]): ("REDUCE", G["block -> expr ;"]),
            (112, G["isvoid"]): ("SHIFT", 24),
            (112, G["if"]): ("SHIFT", 12),
            (112, G["not"]): ("SHIFT", 31),
            (112, G["int"]): ("SHIFT", 35),
            (112, G["{"]): ("SHIFT", 10),
            (112, G["case"]): ("SHIFT", 21),
            (112, G["new"]): ("SHIFT", 22),
            (112, G["~"]): ("SHIFT", 27),
            (112, G["("]): ("SHIFT", 11),
            (113, G["}"]): ("REDUCE", G["block -> expr ; block"]),
            (114, G["}"]): ("SHIFT", 115),
            (115, G[";"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (115, G["error"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (116, G[":"]): ("SHIFT", 117),
            (117, G["type"]): ("SHIFT", 118),
            (118, G[")"]): ("REDUCE", G["param-list -> id : type"]),
            (118, G[","]): ("SHIFT", 119),
            (119, G["id"]): ("SHIFT", 116),
            (120, G[")"]): ("REDUCE", G["param-list -> id : type , param-list"]),
            (121, G[")"]): ("SHIFT", 122),
            (122, G[":"]): ("SHIFT", 123),
            (123, G["type"]): ("SHIFT", 124),
            (124, G["{"]): ("SHIFT", 125),
            (125, G["string"]): ("SHIFT", 34),
            (125, G["id"]): ("SHIFT", 32),
            (125, G["let"]): ("SHIFT", 14),
            (125, G["int"]): ("SHIFT", 35),
            (125, G["while"]): ("SHIFT", 13),
            (125, G["isvoid"]): ("SHIFT", 24),
            (125, G["not"]): ("SHIFT", 31),
            (125, G["if"]): ("SHIFT", 12),
            (125, G["new"]): ("SHIFT", 22),
            (125, G["{"]): ("SHIFT", 10),
            (125, G["case"]): ("SHIFT", 21),
            (125, G["("]): ("SHIFT", 11),
            (125, G["~"]): ("SHIFT", 27),
            (125, G["true"]): ("SHIFT", 25),
            (125, G["false"]): ("SHIFT", 26),
            (126, G["}"]): ("SHIFT", 127),
            (127, G[";"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (127, G["error"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (128, G["type"]): ("SHIFT", 129),
            (129, G[";"]): ("REDUCE", G["attribute -> id : type"]),
            (129, G["error"]): ("REDUCE", G["attribute -> id : type"]),
            (129, G["<-"]): ("SHIFT", 130),
            (130, G["id"]): ("SHIFT", 32),
            (130, G["let"]): ("SHIFT", 14),
            (130, G["~"]): ("SHIFT", 27),
            (130, G["while"]): ("SHIFT", 13),
            (130, G["true"]): ("SHIFT", 25),
            (130, G["not"]): ("SHIFT", 31),
            (130, G["if"]): ("SHIFT", 12),
            (130, G["false"]): ("SHIFT", 26),
            (130, G["{"]): ("SHIFT", 10),
            (130, G["string"]): ("SHIFT", 34),
            (130, G["case"]): ("SHIFT", 21),
            (130, G["int"]): ("SHIFT", 35),
            (130, G["new"]): ("SHIFT", 22),
            (130, G["isvoid"]): ("SHIFT", 24),
            (130, G["("]): ("SHIFT", 11),
            (131, G[";"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (131, G["error"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (132, G["}"]): ("SHIFT", 133),
            (133, G["class"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (133, G["$"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (134, G["error"]): ("SHIFT", 142),
            (134, G[";"]): ("SHIFT", 135),
            (135, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (135, G["id"]): ("SHIFT", 4),
            (136, G["}"]): ("REDUCE", G["feature-list -> attribute ; feature-list"]),
            (137, G["error"]): ("SHIFT", 140),
            (137, G[";"]): ("SHIFT", 138),
            (138, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (138, G["id"]): ("SHIFT", 4),
            (139, G["}"]): ("REDUCE", G["feature-list -> method ; feature-list"]),
            (140, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (140, G["id"]): ("SHIFT", 4),
            (141, G["}"]): ("REDUCE", G["feature-list -> method error feature-list"]),
            (142, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (142, G["id"]): ("SHIFT", 4),
            (143, G["}"]): ("REDUCE", G["feature-list -> attribute error feature-list"]),
            (144, G["type"]): ("SHIFT", 145),
            (145, G["{"]): ("SHIFT", 146),
            (146, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (146, G["id"]): ("SHIFT", 4),
            (147, G["}"]): ("SHIFT", 148),
            (148, G["class"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (148, G["$"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (149, G["$"]): ("OK", None),
            (150, G["$"]): ("REDUCE", G["program -> class-list"]),
            (151, G["class"]): ("SHIFT", 1),
            (151, G["$"]): ("REDUCE", G["class-list -> class-def"]),
            (152, G["$"]): ("REDUCE", G["class-list -> class-def class-list"]),
        }

    @staticmethod
    def __goto_table():
        return {
            (0, G["class-list"]): 150,
            (0, G["class-def"]): 151,
            (0, G["program"]): 149,
            (3, G["method"]): 137,
            (3, G["attribute"]): 134,
            (3, G["feature-list"]): 132,
            (5, G["param-list"]): 121,
            (9, G["term"]): 54,
            (9, G["arith"]): 39,
            (9, G["function-call"]): 36,
            (9, G["comp"]): 38,
            (9, G["atom"]): 44,
            (9, G["expr"]): 114,
            (9, G["factor"]): 57,
            (10, G["term"]): 54,
            (10, G["expr"]): 111,
            (10, G["atom"]): 44,
            (10, G["arith"]): 39,
            (10, G["comp"]): 38,
            (10, G["function-call"]): 36,
            (10, G["block"]): 109,
            (10, G["factor"]): 57,
            (11, G["arith"]): 39,
            (11, G["function-call"]): 36,
            (11, G["term"]): 54,
            (11, G["expr"]): 107,
            (11, G["atom"]): 44,
            (11, G["factor"]): 57,
            (11, G["comp"]): 38,
            (12, G["arith"]): 39,
            (12, G["atom"]): 44,
            (12, G["term"]): 54,
            (12, G["factor"]): 57,
            (12, G["expr"]): 101,
            (12, G["comp"]): 38,
            (12, G["function-call"]): 36,
            (13, G["term"]): 54,
            (13, G["function-call"]): 36,
            (13, G["arith"]): 39,
            (13, G["atom"]): 44,
            (13, G["comp"]): 38,
            (13, G["factor"]): 57,
            (13, G["expr"]): 97,
            (14, G["declaration-list"]): 94,
            (18, G["declaration-list"]): 19,
            (20, G["function-call"]): 36,
            (20, G["arith"]): 39,
            (20, G["term"]): 54,
            (20, G["atom"]): 44,
            (20, G["expr"]): 91,
            (20, G["comp"]): 38,
            (20, G["factor"]): 57,
            (21, G["atom"]): 44,
            (21, G["arith"]): 39,
            (21, G["term"]): 54,
            (21, G["factor"]): 57,
            (21, G["comp"]): 38,
            (21, G["function-call"]): 36,
            (21, G["expr"]): 79,
            (24, G["atom"]): 44,
            (24, G["function-call"]): 36,
            (24, G["factor"]): 78,
            (27, G["atom"]): 44,
            (27, G["function-call"]): 36,
            (27, G["factor"]): 77,
            (29, G["term"]): 54,
            (29, G["expr"]): 51,
            (29, G["arith"]): 39,
            (29, G["expr-list"]): 75,
            (29, G["comp"]): 38,
            (29, G["function-call"]): 36,
            (29, G["factor"]): 57,
            (29, G["atom"]): 44,
            (31, G["atom"]): 44,
            (31, G["arith"]): 39,
            (31, G["comp"]): 38,
            (31, G["term"]): 54,
            (31, G["expr"]): 74,
            (31, G["function-call"]): 36,
            (31, G["factor"]): 57,
            (33, G["atom"]): 44,
            (33, G["expr"]): 37,
            (33, G["arith"]): 39,
            (33, G["comp"]): 38,
            (33, G["term"]): 54,
            (33, G["function-call"]): 36,
            (33, G["factor"]): 57,
            (40, G["atom"]): 44,
            (40, G["term"]): 41,
            (40, G["function-call"]): 36,
            (40, G["factor"]): 57,
            (42, G["atom"]): 44,
            (42, G["function-call"]): 36,
            (42, G["factor"]): 43,
            (47, G["term"]): 54,
            (47, G["expr"]): 51,
            (47, G["arith"]): 39,
            (47, G["comp"]): 38,
            (47, G["function-call"]): 36,
            (47, G["expr-list"]): 49,
            (47, G["factor"]): 57,
            (47, G["atom"]): 44,
            (52, G["term"]): 54,
            (52, G["expr"]): 51,
            (52, G["arith"]): 39,
            (52, G["comp"]): 38,
            (52, G["expr-list"]): 53,
            (52, G["function-call"]): 36,
            (52, G["factor"]): 57,
            (52, G["atom"]): 44,
            (55, G["atom"]): 44,
            (55, G["function-call"]): 36,
            (55, G["factor"]): 56,
            (62, G["expr-list"]): 64,
            (62, G["term"]): 54,
            (62, G["expr"]): 51,
            (62, G["arith"]): 39,
            (62, G["comp"]): 38,
            (62, G["function-call"]): 36,
            (62, G["factor"]): 57,
            (62, G["atom"]): 44,
            (66, G["atom"]): 44,
            (66, G["term"]): 67,
            (66, G["function-call"]): 36,
            (66, G["factor"]): 57,
            (68, G["term"]): 54,
            (68, G["arith"]): 69,
            (68, G["atom"]): 44,
            (68, G["factor"]): 57,
            (68, G["function-call"]): 36,
            (70, G["term"]): 54,
            (70, G["arith"]): 71,
            (70, G["atom"]): 44,
            (70, G["factor"]): 57,
            (70, G["function-call"]): 36,
            (72, G["term"]): 54,
            (72, G["arith"]): 73,
            (72, G["atom"]): 44,
            (72, G["factor"]): 57,
            (72, G["function-call"]): 36,
            (80, G["case-list"]): 89,
            (84, G["atom"]): 44,
            (84, G["expr"]): 85,
            (84, G["term"]): 54,
            (84, G["arith"]): 39,
            (84, G["factor"]): 57,
            (84, G["comp"]): 38,
            (84, G["function-call"]): 36,
            (86, G["case-list"]): 87,
            (92, G["declaration-list"]): 93,
            (95, G["atom"]): 44,
            (95, G["arith"]): 39,
            (95, G["comp"]): 38,
            (95, G["term"]): 54,
            (95, G["expr"]): 96,
            (95, G["function-call"]): 36,
            (95, G["factor"]): 57,
            (98, G["atom"]): 44,
            (98, G["arith"]): 39,
            (98, G["term"]): 54,
            (98, G["function-call"]): 36,
            (98, G["expr"]): 99,
            (98, G["factor"]): 57,
            (98, G["comp"]): 38,
            (102, G["atom"]): 44,
            (102, G["arith"]): 39,
            (102, G["comp"]): 38,
            (102, G["factor"]): 57,
            (102, G["term"]): 54,
            (102, G["expr"]): 103,
            (102, G["function-call"]): 36,
            (104, G["arith"]): 39,
            (104, G["comp"]): 38,
            (104, G["function-call"]): 36,
            (104, G["atom"]): 44,
            (104, G["term"]): 54,
            (104, G["expr"]): 105,
            (104, G["factor"]): 57,
            (112, G["term"]): 54,
            (112, G["expr"]): 111,
            (112, G["atom"]): 44,
            (112, G["arith"]): 39,
            (112, G["comp"]): 38,
            (112, G["block"]): 113,
            (112, G["function-call"]): 36,
            (112, G["factor"]): 57,
            (119, G["param-list"]): 120,
            (125, G["term"]): 54,
            (125, G["arith"]): 39,
            (125, G["function-call"]): 36,
            (125, G["expr"]): 126,
            (125, G["comp"]): 38,
            (125, G["atom"]): 44,
            (125, G["factor"]): 57,
            (130, G["atom"]): 44,
            (130, G["term"]): 54,
            (130, G["arith"]): 39,
            (130, G["factor"]): 57,
            (130, G["comp"]): 38,
            (130, G["expr"]): 131,
            (130, G["function-call"]): 36,
            (135, G["feature-list"]): 136,
            (135, G["method"]): 137,
            (135, G["attribute"]): 134,
            (138, G["feature-list"]): 139,
            (138, G["method"]): 137,
            (138, G["attribute"]): 134,
            (140, G["method"]): 137,
            (140, G["attribute"]): 134,
            (140, G["feature-list"]): 141,
            (142, G["method"]): 137,
            (142, G["attribute"]): 134,
            (142, G["feature-list"]): 143,
            (146, G["feature-list"]): 147,
            (146, G["method"]): 137,
            (146, G["attribute"]): 134,
            (151, G["class-def"]): 151,
            (151, G["class-list"]): 152,
        }
