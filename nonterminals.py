from cmp.pycompiler import Grammar

G = Grammar()

Program = G.NonTerminal('program', startSymbol=True)
ClassSet = G.NonTerminal('class-set')
ClassDef = G.NonTerminal('class-def')
FeatureList = G.NonTerminal('feature-list')
Attribute = G.NonTerminal('attribute')
Method = G.NonTerminal('method')
ParamVector = G.NonTerminal('param-vector')
Block = G.NonTerminal('block')
Declaration = G.NonTerminal('declaration')
CaseList = G.NonTerminal('case-list')
FunctionCall = G.NonTerminal('function-call')
ExprVector = G.NonTerminal('expr-vector')
BodyExpr = G.NonTerminal('body-expr')
Expr = G.NonTerminal('expr')
CompExpr = G.NonTerminal('comp-expr')
SubExpr = G.NonTerminal('sub-expr')
Term = G.NonTerminal('term')
Fact = G.NonTerminal('fact')
Atom = G.NonTerminal('atom')
Particle = G.NonTerminal('particle')
