59
program -> class-set
class-set -> class-def
class-set -> class-set class-def
class-def -> class type { feature-list }
class-def -> class type inherits type { feature-list }
feature-list -> attribute ;
feature-list -> method ;
feature-list -> feature-list attribute ;
feature-list -> feature-list method ;
attribute -> id : type
attribute -> id : type <- expr
method -> id ( ) : type { body-expr }
method -> id ( param-vector ) : type { body-expr }
param-vector -> id : type
param-vector -> param-vector , id : type
body-expr -> id <- expr
body-expr -> { block }
body-expr -> if expr then body-expr else body-expr fi
body-expr -> while expr loop body-expr pool
body-expr -> declaration in body-expr
body-expr -> case expr of case-list esac
body-expr -> expr
expr -> not expr
expr -> comp-expr
comp-expr -> comp-expr < sub-expr
comp-expr -> comp-expr <= sub-expr
comp-expr -> comp-expr = sub-expr
comp-expr -> sub-expr
sub-expr -> sub-expr + term
sub-expr -> sub-expr - term
sub-expr -> term
term -> term * fact
term -> term / fact
term -> fact
fact -> isvoid fact
fact -> atom
atom -> ~ atom
atom -> particle
particle -> id
particle -> true
particle -> false
particle -> integer
particle -> string
particle -> function-call
particle -> new type
particle -> ( expr )
block -> body-expr ;
block -> block body-expr ;
declaration -> let id : type
declaration -> let id : type <- expr
declaration -> declaration , id : type
declaration -> declaration , id : type <- expr
case-list -> id : type => expr ;
case-list -> case-list id : type => expr ;
function-call -> id ( expr-vector )
function-call -> particle . id ( expr-vector )
function-call -> particle @ type . id ( expr-vector )
expr-vector -> expr
expr-vector -> expr-vector , expr

Build Parsing Time : 5.887415170669556
Action Entries     : 1049
Parsing Conflicts  : False
